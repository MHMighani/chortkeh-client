{"version":3,"sources":["api/api.js","history.jsx","actions/index.jsx","constants/actionTypes.jsx","components/forms/RenderError.jsx","components/forms/RenderInput.jsx","components/forms/AddSourceForm.jsx","NumberWithCommas.js","components/Calculator/index.jsx","components/modals/useModal.jsx","components/modals/Modal.jsx","components/forms/AddInventoryForm.jsx","components/AddInventory/index.jsx","components/NoInventoryWarning/index.jsx","components/table/TableHead.jsx","components/table/TableBody.jsx","components/AllInventoryValue.jsx","components/table/Table.jsx","components/charts/PieChart.jsx","components/charts/Charts.jsx","components/Inventory/index.jsx","components/App.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","reducers/inventoryReducer.jsx","index.jsx"],"names":["getPricesApi","a","axios","get","response","data","getBitCoinPrice","bpi","createBrowserHistory","getDayPrice","dispatch","dayPrices","bitCoinResponse","bitCoinPrice","parseInt","USD","rate_float","cryptoPrice","Crypto","Currency","Buy","allPrices","type","payload","RenderError","error","touched","className","RenderInput","input","label","meta","min","AddSourceForm","onSubmit","formValues","console","log","props","addNewSource","handleSubmit","this","Field","name","component","React","Component","reduxForm","form","validate","errors","newSourceName","newSourceValue","connect","history","push","process","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","todayPrices","useSelector","state","allTodayPrices","id","icon","useModal","useState","isShowing","setIsShowing","toggle","Modal","hide","children","ReactDOM","createPortal","Fragment","onClick","aria-modal","aria-hidden","tabIndex","role","e","stopPropagation","data-dismiss","aria-label","document","body","AddInventoryForm","getSelectOptions","optionsList","map","option","index","key","value","labelTranslations","renderSelector","button","options","mainSource","renderSubSourceLabel","mainSourceOptionsList","Object","keys","inventoryLabels","subSourceOptionsList","to","selector","formValueSelector","change","AddInventory","addToInventory","untouch","toast","notify","duration","initialValues","NoInventoryWarning","TableHead","scope","inventory","inventoryList","deleteFromInventory","tableBody","inventoryTodayValue","AllInventoryValue","allValue","reduce","total","Table","colSpan","PieChart","labels","asset","datasets","backgroundColor","randomColor","count","borderWidth","maintainAspectRatio","legend","fontSize","length","Inventory","renderContent","library","add","faTimes","faEdit","faPlus","combineReducers","formReducer","action","others","translations","newSource","currencyPrices","_","keyBy","goldPrices","cryptoPrices","duplicateInventory","find","newState","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","exact","path","querySelector"],"mappings":"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","file":"static/js/main.1183b7e7.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getPricesApi = async () => {\n    const url = \"https://currency.jafari.pw/json\"\n\n    const response = await axios.get(url)\n\n    return response.data\n}\n\nexport const getBitCoinPrice = async () => {\n    const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\"\n\n    const response = await axios.get(url)\n\n    return response.data.bpi\n}\n","import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import * as types from '../constants/actionTypes';\nimport { getPricesApi, getBitCoinPrice } from '../api/api';\nimport history from '../history'\n\nexport const getDayPrice = () => async dispatch => {\n\tconst dayPrices = await getPricesApi();\n    const bitCoinResponse = await getBitCoinPrice();\n    const bitCoinPrice = parseInt(bitCoinResponse.USD.rate_float)\n\tconst cryptoPrice = { Crypto: [{ Currency: 'BitCoin', Buy: bitCoinPrice }]};\n    \n\tconst allPrices = { ...dayPrices, ...cryptoPrice };\n    \n\tdispatch({ type: types.GET_DAY_PRICE, payload: allPrices });\n};\n\nexport const addToInventory = formValues => async dispatch => {\n\tdispatch({ type: types.ADD_TO_INVENTORY, payload: formValues });\n};\n\nexport const deleteFromInventory = subSource => async dispatch => {\n\tdispatch({ type: types.DELETE_FROM_INVENTORY, payload: subSource });\n};\n\nexport const addNewSource = formValues => async dispatch => {\n\tdispatch({type: types.ADD_SOURCE, payload: formValues})\n\thistory.push(`${process.env.PUBLIC_URL}`)\n}","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"\nexport const ADD_SOURCE = \"ADD_SOURCE\"","import React from 'react'\n\nconst RenderError = ({ error, touched }) => {\n    if (error && touched) {\n        return <div className=\"error-wraper\">{error}</div>;\n    }\n\n    return null\n}\n\nexport default RenderError","import React from 'react'\nimport RenderError from './RenderError'\n\nconst RenderInput = ({ input, label, meta, type=\"text\" }) => {\n    return (\n        <div className=\"col-wrapper\">\n            <div className=\"input-wrapper\">\n                <input min=\"0\" type={type} {...input} />\n                <label>{label}</label>\n            </div>\n            <RenderError error={meta.error} touched={meta.touched} />\n        </div>\n    );\n};\n\nexport default RenderInput","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport RenderInput from './RenderInput';\nimport { connect } from 'react-redux';\nimport { addNewSource } from '../../actions'\n\nclass AddSourceForm extends React.Component {\n\tonSubmit = (formValues) => {\n\t\tconsole.log(\"ssss\")\n\t\tthis.props.addNewSource(formValues)\n\t};\n\n\trender() {\n\t\tconst { handleSubmit } = this.props;\n\t\t\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit(this.onSubmit)}>\n\t\t\t\t<div className=\"addsource-form\">\n\t\t\t\t\t<Field name=\"newSourceName\" label=\"نام منبع جدید\" component={RenderInput} />\n\t\t\t\t\t<Field name=\"newSourceValue\" type=\"number\" label=\"ارزش\" component={RenderInput} />\n\t\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t\t<button className=\"button\">\n\t\t\t\t\t\t\tتایید\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\t\n\tif (!formValues.newSourceName) {\n\t\terrors['newSourceName'] = 'لطفا نام منبع را مشخص کنید';\n\t} else if (!formValues.newSourceValue) {\n\t\terrors['newSourceValue'] = 'لطفا ارزش منبع جدید را مشخص کنید';\n\t}\n\t\n\treturn errors;\n};\n\n\nexport default reduxForm({\n\tform: 'AddSourceForm',\n\tvalidate,\n})(connect(null, { addNewSource })(AddSourceForm));\n","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport numberWithCommas from '../../NumberWithCommas';\n\nimport './style.scss'\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div id=\"calculator\" className=\"form-section\">\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت روز</span>\n\t\t\t\t<span>{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>تعداد</span>\n\t\t\t\t<span>{numberWithCommas(amount)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت کل</span>\n\t\t\t\t<span >{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  }\n};\n\nexport default useModal;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss'\n\nconst Modal = ({ isShowing, hide, children }) =>\n\tisShowing\n\t\t? ReactDOM.createPortal(\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"modal-overlay\" />\n\t\t\t\t\t<div className=\"modal-wrapper\" onClick={hide} aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n\t\t\t\t\t\t<div className=\"modal\" onClick={e => e.stopPropagation()}>\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"modal-close-button\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\tonClick={hide}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>,\n\t\t\t\tdocument.body\n\t\t  )\n\t\t: null;\n\n\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { getDayPrice } from '../../actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AddSourceForm from './AddSourceForm';\nimport RenderInput from './RenderInput';\nimport RenderError from './RenderError';\nimport Calculator from '../Calculator';\nimport useModal from '../modals/useModal';\nimport Modal from '../modals/Modal';\n\nimport './style.scss';\n\nclass AddInventoryForm extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\tgetSelectOptions = (optionsList) => {\n\t\tlet options = optionsList.map((option, index) => (\n\t\t\t<option key={index} value={option}>\n\t\t\t\t{this.props.labelTranslations[option]}\n\t\t\t</option>\n\t\t));\n\t\treturn options;\n\t};\n\n\trenderSelector = ({ input, label, meta, options }) => {\n\t\tconst { isShowing, toggle } = useModal();\n\t\tlet button;\n\t\tif (this.props.mainSource === 'others' && input.name === 'subSource') {\n\t\t\tbutton = (\n\t\t\t\t<button id=\"add-source-btn\" className=\"button\" onClick={toggle}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"plus\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\tif (isShowing) {\n\t\t\treturn (\n\t\t\t\t<Modal isShowing={isShowing} hide={toggle}>\n\t\t\t\t\t<AddSourceForm />\n\t\t\t\t</Modal>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"col-wrapper\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t{button}\n\t\t\t\t\t<select type=\"select\" {...input}>\n\t\t\t\t\t\t{options}\n\t\t\t\t\t</select>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t</div>\n\t\t\t\t<RenderError error={meta.error} touched={meta.touched} />\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// for rendering subSource label translation\n\trenderSubSourceLabel = (mainSource) => {\n\t\tif (mainSource === 'others') {\n\t\t\treturn '';\n\t\t} else if (!mainSource) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn this.props.labelTranslations[mainSource];\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { handleSubmit, mainSource, subSource, amount } = this.props;\n\t\tconst mainSourceOptionsList = [...[''], ...Object.keys(this.props.inventoryLabels)];\n\t\tconst subSourceOptionsList = mainSource ? [...[''], ...this.props.inventoryLabels[mainSource]] : [''];\n\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit(this.props.onSubmit)}>\n\t\t\t\t<div className=\"form-section\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\t\tlabel={`نوع ${this.renderSubSourceLabel(mainSource)}`}\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(subSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field name=\"amount\" label=\"مقدار\" type=\"number\" component={RenderInput} />\n\t\t\t\t</div>\n\t\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t<button className=\"button\" id=\"submit-btn\" type=\"submit\">\n\t\t\t\t\t\tتایید\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link className=\"button\" to={`${process.env.PUBLIC_URL}`} id=\"return-btn\">\n\t\t\t\t\t\tبازگشت\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tlabelTranslations: state.labelTranslations,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.mainSource) {\n\t\terrors['mainSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!formValues.subSource) {\n\t\terrors['subSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!parseInt(formValues.amount)) {\n\t\terrors['amount'] = 'لطفا مقدار دارایی را مشخص کنید';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate,\n})(connect(mapStateToProps, { getDayPrice, change })(AddInventoryForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { change,untouch } from 'redux-form'\nimport AddInventoryForm from '../forms/AddInventoryForm';\nimport { addToInventory } from '../../actions';\nimport toast from 'toasted-notes';\n\nimport './style.scss';\nimport 'toasted-notes/src/styles.css';\n\nclass AddInventory extends Component {\n\thandleSubmit = (formValues,dispatch) => {\n\t\tthis.props.addToInventory(formValues);\n\t\t\n\t\tdispatch(change('addInventoryForm','amount',''))\n\t\tdispatch(untouch('addInventoryForm','amount',''))\n\n\t\ttoast.notify('به دارایی اضافه شد',{\n\t\t\tduration:2000\n\t\t})\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"form-page\">\n\t\t\t\t<AddInventoryForm\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tinitialValues={{ amount: 0, mainSource: '', subSource: '' }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react';\n\nimport './style.scss'\n\nconst NoInventoryWarning = () => {\n\tconst message = '!هنوز چیزی به دارایی اضافه نکرده اید';\n\treturn (\n\t\t<div id=\"no-inventory-warning\">\n\t\t\t<p>{message}</p>\n\t\t</div>\n\t);\n};\n\nexport default NoInventoryWarning;\n","import React from 'react';\n\nconst TableHead = props => {\n\tconst tableHead = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\"></th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableHead;\n};\n\nexport default TableHead;\n","import React from 'react';\nimport { deleteFromInventory } from '../../actions';\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../../NumberWithCommas';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst TableBody = (props) => {\n\tconst tableBody = props.inventory.map((inventory, index) => {\n\t\tconst { labelTranslations, todayPrices, deleteFromInventory } = props;\n\t\tconst { subSource, amount } = inventory;\n\t\tconst inventoryTodayValue = todayPrices[subSource]['Buy'];\n\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{labelTranslations[subSource]}</td>\n\t\t\t\t<td>{numberWithCommas(amount)}</td>\n\t\t\t\t<td>{numberWithCommas(inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(parseInt(amount) * inventoryTodayValue)}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"button table-delete-btn\" onClick={() => deleteFromInventory(subSource)}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className=\"button success table-edit-btn\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"edit\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{tableBody}</tbody>;\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventory: state.inventoryList,\n\t\ttodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, { deleteFromInventory })(TableBody);\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport numberWithCommas from '../NumberWithCommas';\n\nconst AllInventoryValue = () => {\n    const todayPrices = useSelector(state => state.allTodayPrices)\n    const inventoryList = useSelector(state => state.inventoryList)\n\n    let allValue = inventoryList.reduce((total,inventory) => {\n        return total + (todayPrices[inventory.subSource][\"Buy\"] * inventory.amount)\n    },0)\n    \n    return <span>{numberWithCommas(allValue)}</span>\n}\n\nexport default AllInventoryValue\n\n","import React from 'react'\nimport TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport AllInventoryValue from '../AllInventoryValue'\n\nimport './style.scss'\n\nconst Table = () => {\n    return(\n        <table>\n            <TableHead />\n            <TableBody />\n            <tbody>\n                <tr>\n                    <td id=\"all-value\" colSpan=\"2\">{AllInventoryValue()}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport randomColor from 'randomcolor'\n\n\nconst PieChart = props => {\n\tconst labels = props.inventoryList.map(asset => props.labelTranslations[asset.subSource])\n\tconst values = props.inventoryList.map(asset => (parseInt(props.allTodayPrices[asset.subSource].Buy) * parseInt(asset.amount)))\n\tconst colors = randomColor({count:6})\n\t\n\tconst options = {\n\t\tmaintainAspectRatio: false,\n\t\tlegend:{\n\t\t\tlabels:{\n\t\t\t\tfontSize:22\n\t\t\t}\n\t\t}\n\t}\n\n\tconst data = {\n        labels,\n        datasets: [{\n            label: '# of Votes',\n            data: values,\n            backgroundColor: colors,\n            borderWidth: 1\n        }]\n    }\n\treturn (\n\t\t<>\n\t\t\t<Doughnut data={data} options={options} />\n\t\t</>\n\t);\n};\n\n\nexport default PieChart","import React from 'react';\nimport { connect } from 'react-redux';\nimport PieChart from './PieChart';\nimport './style.scss';\n\nconst Charts = props => {\n\tif (!props.inventoryList.length) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<div className=\"chart-page\">\n\t\t\t<div className=\"chart-container\">\n\t\t\t\t<PieChart\n\t\t\t\t\tallTodayPrices={props.allTodayPrices}\n\t\t\t\t\tinventoryList={props.inventoryList}\n\t\t\t\t\tlabelTranslations={props.labelTranslations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tallTodayPrices: state.allTodayPrices,\n\t\tinventoryList: state.inventoryList,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, {})(Charts);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice } from '../../actions';\nimport { connect } from 'react-redux';\nimport NoInventoryWarning from '../NoInventoryWarning';\nimport Table from '../table/Table';\nimport Charts from '../charts/Charts';\n\nimport './style.scss';\n\nclass Inventory extends Component {\n\tasync componentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderContent = () => {\n\t\tconst { inventoryList } = this.props;\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn <Table />;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div id=\"inventory-page\">\n\t\t\t\t\t{this.renderContent()}\n\t\t\t\t\t<Link className=\"button\" id=\"addInventoryLink\" to={process.env.PUBLIC_URL + '/addInventory'}>\n\t\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<Charts />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryList: state.inventoryList,\n\t};\n};\n\nexport default connect(mapStateToProps, { getDayPrice })(Inventory);\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport AddInventory from './AddInventory';\nimport Inventory from './Inventory';\nimport history from '../history';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faTimes,faEdit,faPlus} from '@fortawesome/free-solid-svg-icons'\nimport AddSourceForm from './forms/AddSourceForm'\n\nimport '../style.scss'\n\nlibrary.add(faTimes,faEdit,faPlus)\n\nexport default function App() {\n\treturn (\n\t\t<div id=\"app\">\n\t\t\t<Router history={history}>\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'} component={Inventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addInventory'} component={AddInventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addSource'} component={AddSourceForm} />\n\t\t\t</Router>\n\t\t\t\n\t\t</div>\n\t);\n}\n","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryList:inventoryReducer\n})","import { ADD_SOURCE } from '../constants/actionTypes'\n\nexport const inventoryLabels = (state={},action) => {\n  let labels = {\n    \"Gold\": [\"1 Emami\",\"1 Old Azadi\", \"1/2 Azadi\", \"1/4 Azadi\"],\n    \"Currency\": [\"US Dollar\", \"Euro\",\"British Pound\",\"Canadian Dollar\"],\n    \"Crypto\":[\"BitCoin\"],\n    \"others\": []\n  };\n\n  if(!Object.keys(state).length){\n    return {...state,...labels}\n  }\n  \n  switch(action.type){\n    case ADD_SOURCE:\n      \n      return {...state,\"others\":[...state.others,action.payload.newSourceName]}\n    default:\n      return state\n  }\n};\n\nexport const labelTranslations = (state={},action) => {\n  const translations = {\n    \"Gold\":\"سکه\",\n    \"1 Emami\":\"تمام سکه\",\n    \"1 Old Azadi\":\"تمام سکه طرح قدیم\",\n    \"1/2 Azadi\":\"نیم سکه\",\n    \"1/4 Azadi\":\"ربع سکه\",\n    \"Currency\":\"ارز\",\n    \"US Dollar\":\"دلار آمریکا\",\n    \"Euro\":\"یورو\",\n    \"British Pound\":\"پوند انگلیس\",\n    \"Canadian Dollar\":\"دلار کانادا\",\n    \"Crypto\":\"ارز دیجیتال\",\n    \"BitCoin\":\"بیت کوین\",\n    \"others\":\"دیگر منابع\",\n    // \"stock\":\"بورس\"\n  };\n\n  if(!Object.keys(state).length){\n    return {...state,...translations}\n  }\n\n  switch(action.type){\n    case ADD_SOURCE:\n      const newSource = action.payload.newSourceName\n      \n      return {...state,[newSource]:newSource}\n    default: \n      return state\n  }\n};\n","import { GET_DAY_PRICE,ADD_SOURCE } from '../constants/actionTypes'\nimport _ from 'lodash'\n\nexport default (state={},action) => {\n    switch(action.type){\n        case GET_DAY_PRICE:\n            const currencyPrices = _.keyBy(action.payload[\"Currency\"],\"Currency\")\n            const goldPrices = _.keyBy(action.payload[\"Gold\"],\"Coin\")\n            let cryptoPrices = _.keyBy(action.payload[\"Crypto\"],\"Currency\")\n\n            // converting bitcoin price from Dollar to Toman\n            cryptoPrices[\"BitCoin\"][\"Buy\"] = cryptoPrices[\"BitCoin\"][\"Buy\"] * currencyPrices[\"US Dollar\"][\"Buy\"]\n\n            const allPrices = {...state,...currencyPrices,...goldPrices,...cryptoPrices}\n            \n            return allPrices\n        case ADD_SOURCE:\n            return {...state,...{[action.payload.newSourceName]:{\"Buy\":parseInt(action.payload.newSourceValue)}}}\n        default:\n            return state    \n    }\n}","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY,ADD_SOURCE} from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\tconst duplicateInventory = state.find(inventory => inventory.subSource === action.payload.subSource);\n\n\t\t\tif (duplicateInventory) {\n\t\t\t\treturn state.map(inventory => {\n\t\t\t\t\tif (inventory.subSource === duplicateInventory.subSource) {\n\t\t\t\t\t\treturn { ...inventory, amount: action.payload.amount };\n\t\t\t\t\t}\n\t\t\t\t\treturn inventory;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [...state, action.payload];\n\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n"],"sourceRoot":""}