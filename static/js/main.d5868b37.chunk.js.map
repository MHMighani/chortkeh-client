{"version":3,"sources":["history.jsx","api/api.js","actions/index.jsx","constants/actionTypes.jsx","NumberWithCommas.js","components/Calculator.jsx","components/forms/AddInventoryForm.jsx","components/AddInventory.jsx","components/NoInventoryWarning.jsx","components/Inventory.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","reducers/inventoryReducer.jsx","index.jsx","components/App.jsx"],"names":["createBrowserHistory","getPricesApi","a","axios","get","response","data","getDayPrice","dispatch","dayPrices","type","payload","addToInventory","formValues","history","push","process","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","labelTranslations","useSelector","state","todayPrices","allTodayPrices","className","style","whiteSpace","margin","AddInventoryForm","getSelectOptions","optionsList","map","option","index","key","renderSelector","input","label","meta","options","renderError","renderInput","min","this","props","error","touched","width","handleSubmit","mainSource","mainSourceOptionsList","Object","keys","inventoryLabels","subSourceOptionsList","onSubmit","Field","name","component","height","padding","Component","selector","formValueSelector","reduxForm","form","validate","errors","parseInt","connect","change","AddInventory","initialValues","NoInventoryWarning","InventoryTableHead","scope","InventoryTableBody","inventoryList","allInventoryValue","deleteFromInventory","tableBody","inventory","onClick","colSpan","Inventory","getAllInventoryValue","price","translations","allTodayPrice","forEach","renderContent","length","to","inventoryReducer","combineReducers","formReducer","action","currencyPrices","_","keyBy","goldPrices","allPrices","newState","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.d5868b37.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import axios from 'axios'\n\nexport const getPricesApi = async () => {\n    const url = \"https://currency.jafari.pw/json\"\n\n    const response = await axios.get(url)\n\n    return response.data\n}","import * as types from '../constants/actionTypes'\nimport history from '../history'\nimport {getPricesApi} from '../api/api'\n\nexport const getDayPrice = () => async(dispatch) => {\n    const dayPrices = await getPricesApi()\n    \n    dispatch({type:types.GET_DAY_PRICE,payload:dayPrices})\n}\n\nexport const addToInventory = formValues => async(dispatch) => {\n    dispatch({type:types.ADD_TO_INVENTORY,payload:formValues})\n\n    history.push(process.env.PUBLIC_URL + \"/\")\n}\n\nexport const deleteFromInventory = subSource => async(dispatch) => {\n    dispatch({type:types.DELETE_FROM_INVENTORY, payload:subSource})\n}","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport numberWithCommas from '../NumberWithCommas';\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst labelTranslations = useSelector(state => state.labelTranslations);\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tsubSource = labelTranslations[subSource];\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div className=\"col\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<span className=\"col-sm-6\" style={{whiteSpace:\"nowrap\"}}>قیمت روز</span>\n\t\t\t\t<span className=\"col-sm-6\">{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-12 d-flex justify-content-center\" style={{ margin: '1rem 0' }}>\n\t\t\t\t\t<i className=\"fas fa-times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row cal-result-label\">\n\t\t\t\t<span className=\"col-sm-6\">تعداد</span>\n\t\t\t\t<span className=\"col-sm-6\">{amount}</span>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<hr className=\"col-sm-12\" />\n\t\t\t</div>\n\t\t\t<div className=\"row cal-result-label\">\n\t\t\t\t<span className=\"col-sm-6\" style={{whiteSpace:\"nowrap\"}}>قیمت کل</span>\n\t\t\t\t<span className=\"col-sm-6\">{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import { Field, reduxForm, formValueSelector,change } from 'redux-form';\nimport { addToInventory, getDayPrice } from '../../actions';\nimport { connect } from 'react-redux';\nimport Calculator from '../Calculator';\n\nimport React, { Component } from 'react';\n\nclass AddInventoryForm extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderError({error,touched}){\n\t\t\n\t\tif(error && touched){\n\t\t\treturn (\n\t\t\t\t<div className=\"alert alert-danger d-flex justify-content-center\" style={{margin:\"1rem 0\",width:\"100%\"}}>\n\t\t\t\t\t{error}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\tgetSelectOptions = optionsList => {\n\t\tlet options = optionsList.map((option, index) => <option key={index}>{option}</option>);\n\t\treturn options;\n\t};\n\n\n\trenderSelector = ({ input, label, meta, options }) => {\n\t\treturn (\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label className=\"col-sm-4 col-form-label\" style={{whiteSpace:\"nowrap\"}}>{label}</label>\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<select type=\"select\" className=\"form-control\" {...input}>\n\t\t\t\t\t\t{options}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderInput = ({ input, label,meta }) => {\n\t\treturn (\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label className=\"col-sm-4 col-form-label\">{label}</label>\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<input className=\"form-control\" min=\"0\" type=\"number\" {...input} />\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { handleSubmit, mainSource, subSource, amount } = this.props;\n\t\tconst mainSourceOptionsList = [...[\"\"],...Object.keys(this.props.inventoryLabels)];\n\t\tconst subSourceOptionsList = mainSource?[...[\"\"],...this.props.inventoryLabels[mainSource]]:[\"\"];\n\t\treturn (\n\t\t\t<div className=\"row justify-content-center align-items-center min-vh-100\">\n\t\t\t\t<form onSubmit={handleSubmit(this.props.onSubmit)} className=\"col-6 h-100 p-2\">\n\t\t\t\t\t<div className=\"container w-70\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\t\toptions={this.getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\t\t\tlabel={`نوع ${this.props.mainSource}`}\n\t\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\t\toptions={this.getSelectOptions(subSourceOptionsList)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field name=\"amount\" label=\"مقدار\" component={this.renderInput} />\n\t\t\t\t\t\t<button className=\"btn-lg btn-primary\" type=\"submit\">\n\t\t\t\t\t\t\tتایید\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"col-6 border border-primary rounded\" style={{height:\"200px\",padding:\"1rem\"}}>\n\t\t\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = formValues => {\n\tconst errors = {}\n\t\n\tif(!formValues.mainSource){\n\t\terrors[\"mainSource\"] = \"لطفا منبع را انتخاب کنید\"\n\t}else if(!formValues.subSource){\n\t\terrors[\"subSource\"] = \"لطفا منبع را انتخاب کنید\"\n\t}else if(!parseInt(formValues.amount)){\n\t\terrors[\"amount\"] = \"لطفا مقدار دارایی را مشخص کنید\"\n\t}\n\treturn errors\n}\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate\n})(connect(mapStateToProps, { addToInventory, getDayPrice, change })(AddInventoryForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddInventoryForm from './forms/AddInventoryForm';\nimport { addToInventory } from '../actions';\n\nclass AddInventory extends Component {\n\thandleSubmit = formValues => {\n\t\tthis.props.addToInventory(formValues);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"bg-primary\">\n\t\t\t\t<div className=\"container px-5 bg-light w-50 justify-content-center align-items-center \">\n\t\t\t\t\t<AddInventoryForm\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\tinitialValues={{ amount: 0, mainSource: '', subSource: '' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react'\n\nconst NoInventoryWarning = () => {\n    const message = \"هنوز چیزی به دارایی اضافه نکرده اید\"\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">{message}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default NoInventoryWarning","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice, deleteFromInventory } from '../actions';\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../NumberWithCommas';\nimport NoInventoryWarning from './NoInventoryWarning';\n\nconst InventoryTableHead = () => {\n\tconst tableBody = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th></th>\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableBody;\n};\n\nconst InventoryTableBody = ({\n\tinventoryList,\n\tallTodayPrices,\n\tlabelTranslations,\n\tallInventoryValue,\n\tdeleteFromInventory,\n}) => {\n\tconst tableBody = inventoryList.map((inventory, index) => {\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={()=>deleteFromInventory(inventory.subSource)}>Delete</button>\n\t\t\t\t\t\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t{numberWithCommas(\n\t\t\t\t\t\tparseInt(inventory.amount) * allTodayPrices[labelTranslations[inventory.subSource]]['Buy']\n\t\t\t\t\t)}\n\t\t\t\t</td>\n\t\t\t\t<td>{numberWithCommas(allTodayPrices[labelTranslations[inventory.subSource]]['Buy'])}</td>\n\t\t\t\t<td>{numberWithCommas(inventory.amount)}</td>\n\t\t\t\t<td>{inventory.subSource}</td>\n\t\t\t\t<th scope=\"row\">{index + 1}</th>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn (\n\t\t<tbody>\n\t\t\t{tableBody}\n\t\t\t<tr>\n\t\t\t\t<td>{numberWithCommas(allInventoryValue)}</td>\n\t\t\t\t<td>ارزش کل</td>\n\t\t\t\t<td colSpan=\"3\"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t);\n};\n\nclass Inventory extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\tgetAllInventoryValue = inventoryList => {\n\t\tlet price = 0;\n\t\tconst translations = this.props.labelTranslations;\n\n\t\tconst allTodayPrice = this.props.allTodayPrices;\n\t\tinventoryList.forEach(inventory => {\n\t\t\tconst subSource = translations[inventory.subSource];\n\t\t\tconst todayPrice = allTodayPrice[subSource]['Buy'];\n\t\t\tconst amount = parseInt(inventory.amount);\n\t\t\tprice += todayPrice * amount;\n\t\t});\n\t\treturn price;\n\t};\n\n\trenderContent = () => {\n\t\tconst { inventoryList } = this.props;\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"container mt-5\">\n\t\t\t\t\t<table className=\"table table-striped border\">\n\t\t\t\t\t\t<InventoryTableHead />\n\t\t\t\t\t\t<InventoryTableBody\n\t\t\t\t\t\t\tinventoryList={inventoryList}\n\t\t\t\t\t\t\tallTodayPrices={this.props.allTodayPrices}\n\t\t\t\t\t\t\tlabelTranslations={this.props.labelTranslations}\n\t\t\t\t\t\t\tallInventoryValue={this.getAllInventoryValue(inventoryList)}\n\t\t\t\t\t\t\tdeleteFromInventory={this.props.deleteFromInventory}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container mt-5\">\n\t\t\t\t{this.renderContent()}\n\t\t\t\t<Link to={process.env.PUBLIC_URL + '/addInventory'} className=\"btn btn-primary my-2\">\n\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryList: state.inventoryReducer,\n\t\tallTodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, { deleteFromInventory, getDayPrice })(Inventory);\n","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryReducer\n})","export const inventoryLabels = () => {\n  const labels = {\n    \"سکه\": [\"تمام سکه\", \"نیم سکه\", \"ربع سکه\"],\n    \"ارز\": [\"دلار آمریکا\", \"یورو\"],\n    \"دیگر منابع\": [\"بورس\"]\n  };\n\n  return labels;\n};\n\nexport const labelTranslations = () => {\n  const translations = {\n    \"سکه\":\"Gold\",\n    \"تمام سکه\":\"1 Emami\",\n    \"نیم سکه\":\"1/2 Azadi\",\n    \"ربع سکه\":\"1/4 Azadi\",\n    \"ارز\":\"Currency\",\n    \"دلار آمریکا\":\"US Dollar\",\n    \"یورو\":\"Euro\",\n    \"دیگر منابع\":\"others\",\n    \"بورس\":\"stock\"\n  };\n\n  return translations;\n};\n","import * as types from '../constants/actionTypes'\nimport _ from 'lodash'\n\nexport default (state={\"stock\":{\"Buy\":1}},action) => {\n    switch(action.type){\n        case types.GET_DAY_PRICE:\n            const currencyPrices = _.keyBy(action.payload[\"Currency\"],\"Currency\")\n            const goldPrices = _.keyBy(action.payload[\"Gold\"],\"Coin\")\n            const allPrices = {...state,...currencyPrices,...goldPrices}\n            \n            return allPrices\n        default:\n            return state    \n    }\n}","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY } from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\treturn [...state, action.payload];\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n","import React from 'react'\nimport {Route,Router} from 'react-router-dom'\nimport AddInventory from './AddInventory'\nimport Inventory from './Inventory'\nimport history from '../history'\n\nexport default function App() {\n    return (\n        <Router history={history}>\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Inventory} />\n            <Route exact path={process.env.PUBLIC_URL + \"/addInventory\"} component={AddInventory} />\n        </Router>\n    )\n}\n"],"sourceRoot":""}