{"version":3,"sources":["api/api.js","actions/index.jsx","constants/actionTypes.jsx","NumberWithCommas.js","components/Calculator.jsx","components/forms/AddInventoryForm.jsx","components/AddInventory.jsx","components/NoInventoryWarning.jsx","components/table/TableHead.jsx","components/table/TableBody.jsx","components/AllInventoryValue.jsx","components/table/Table.jsx","components/charts/PieChart.jsx","components/charts/LineChart.jsx","components/charts/Charts.jsx","components/Inventory.jsx","history.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","reducers/inventoryReducer.jsx","index.jsx","components/App.jsx"],"names":["getPricesApi","a","axios","get","response","data","getBitCoinPrice","bpi","getDayPrice","dispatch","dayPrices","bitCoinResponse","bitCoinPrice","parseInt","USD","rate_float","cryptoPrice","Crypto","Currency","Buy","allPrices","type","payload","addToInventory","formValues","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","todayPrices","useSelector","state","allTodayPrices","id","className","AddInventoryForm","getSelectOptions","optionsList","map","option","index","key","value","props","labelTranslations","renderSelector","input","label","meta","options","renderError","renderInput","min","renderSubSourceLabel","mainSource","this","error","touched","handleSubmit","mainSourceOptionsList","Object","keys","inventoryLabels","subSourceOptionsList","onSubmit","Field","name","component","to","process","Component","selector","formValueSelector","reduxForm","form","validate","errors","connect","change","AddInventory","toast","notify","duration","initialValues","NoInventoryWarning","TableHead","scope","inventory","inventoryList","deleteFromInventory","tableBody","inventoryTodayValue","AllInventoryValue","allValue","reduce","total","Table","colSpan","PieChart","labels","asset","datasets","backgroundColor","randomColor","count","borderWidth","LineChart","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","length","Inventory","renderContent","createBrowserHistory","combineReducers","formReducer","action","currencyPrices","_","keyBy","goldPrices","cryptoPrices","duplicateInventory","find","newState","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","history","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.bc1ba8a9.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getPricesApi = async () => {\n    const url = \"https://currency.jafari.pw/json\"\n\n    const response = await axios.get(url)\n\n    return response.data\n}\n\nexport const getBitCoinPrice = async () => {\n    const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\"\n\n    const response = await axios.get(url)\n\n    return response.data.bpi\n}\n","import * as types from '../constants/actionTypes';\nimport { getPricesApi, getBitCoinPrice } from '../api/api';\n\nexport const getDayPrice = () => async dispatch => {\n\tconst dayPrices = await getPricesApi();\n    const bitCoinResponse = await getBitCoinPrice();\n    const bitCoinPrice = parseInt(bitCoinResponse.USD.rate_float)\n\tconst cryptoPrice = { Crypto: [{ Currency: 'BitCoin', Buy: bitCoinPrice }]};\n    \n\tconst allPrices = { ...dayPrices, ...cryptoPrice };\n    \n\tdispatch({ type: types.GET_DAY_PRICE, payload: allPrices });\n};\n\nexport const addToInventory = formValues => async dispatch => {\n\tdispatch({ type: types.ADD_TO_INVENTORY, payload: formValues });\n};\n\nexport const deleteFromInventory = subSource => async dispatch => {\n\tdispatch({ type: types.DELETE_FROM_INVENTORY, payload: subSource });\n};\n","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport numberWithCommas from '../NumberWithCommas';\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div id=\"calculator\" className=\"form-section\">\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت روز</span>\n\t\t\t\t<span>{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<i className=\"fas fa-times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>تعداد</span>\n\t\t\t\t<span>{numberWithCommas(amount)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت کل</span>\n\t\t\t\t<span >{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { addToInventory, getDayPrice } from '../../actions';\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport Calculator from '../Calculator';\n\nimport React, { Component } from 'react';\n\nclass AddInventoryForm extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderError({ error, touched }) {\n\t\tif (error && touched) {\n\t\t\treturn <div className=\"error-wraper\">{error}</div>;\n\t\t}\n\t}\n\n\tgetSelectOptions = optionsList => {\n\t\tlet options = optionsList.map((option, index) => (\n\t\t\t<option key={index} value={option}>\n\t\t\t\t{this.props.labelTranslations[option]}\n\t\t\t</option>\n\t\t));\n\t\treturn options;\n\t};\n\n\trenderSelector = ({ input, label, meta, options }) => {\n\t\treturn (\n\t\t\t<div className=\"col-wrapper\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t<select type=\"select\" {...input}>\n\t\t\t\t\t\t{options}\n\t\t\t\t\t</select>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderInput = ({ input, label, meta }) => {\n\t\treturn (\n\t\t\t<div className=\"col-wrapper\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t<input min=\"0\" type=\"number\" {...input} />\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\t\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t};\n\n\t// for rendering subSource label translation\n\trenderSubSourceLabel = mainSource => {\n\t\tif (mainSource === 'others') {\n\t\t\treturn 'منبع';\n\t\t} else if (!mainSource) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn this.props.labelTranslations[mainSource];\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { handleSubmit, mainSource, subSource, amount } = this.props;\n\t\tconst mainSourceOptionsList = [...[''], ...Object.keys(this.props.inventoryLabels)];\n\t\tconst subSourceOptionsList = mainSource ? [...[''], ...this.props.inventoryLabels[mainSource]] : [''];\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit(this.props.onSubmit)}>\n\t\t\t\t<div className=\"form-section\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\t\tlabel={`نوع ${this.renderSubSourceLabel(mainSource)}`}\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(subSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field name=\"amount\" label=\"مقدار\" component={this.renderInput} />\n\t\t\t\t</div>\n\t\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t<button className=\"button\" id=\"submit-btn\" type=\"submit\">تایید</button>\n\t\t\t\t\t<Link className=\"button\" to={`${process.env.PUBLIC_URL}`} id=\"return-btn\" >بازگشت</Link>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tlabelTranslations: state.labelTranslations,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = formValues => {\n\tconst errors = {};\n\n\tif (!formValues.mainSource) {\n\t\terrors['mainSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!formValues.subSource) {\n\t\terrors['subSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!parseInt(formValues.amount)) {\n\t\terrors['amount'] = 'لطفا مقدار دارایی را مشخص کنید';\n\t}\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate,\n})(connect(mapStateToProps, { addToInventory, getDayPrice, change })(AddInventoryForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddInventoryForm from './forms/AddInventoryForm';\nimport { addToInventory } from '../actions';\nimport toast from 'toasted-notes'\nimport 'toasted-notes/src/styles.css'\n\nclass AddInventory extends Component {\n\thandleSubmit = formValues => {\n\t\tthis.props.addToInventory(formValues);\n\t\ttoast.notify('به دارایی اضافه شد',{\n\t\t\tduration:2000\n\t\t})\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"form-page\">\n\t\t\t\t<AddInventoryForm\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tinitialValues={{ amount: 0, mainSource: '', subSource: '' }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react';\n\nconst NoInventoryWarning = () => {\n\tconst message = '!هنوز چیزی به دارایی اضافه نکرده اید';\n\treturn (\n\t\t<div id=\"no-inventory-warning\">\n\t\t\t<p>{message}</p>\n\t\t</div>\n\t);\n};\n\nexport default NoInventoryWarning;\n","import React from 'react';\n\nconst TableHead = props => {\n\tconst tableHead = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* <th></th> */}\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableHead;\n};\n\nexport default TableHead;\n","import React from 'react';\nimport {deleteFromInventory} from '../../actions'\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../../NumberWithCommas';\n\nconst TableBody = props => {\n\tconst tableBody = props.inventory.map((inventory, index) => {\n\t\tconst { labelTranslations, todayPrices,deleteFromInventory } = props;\n\t\tconst { subSource, amount } = inventory;\n\t\tconst inventoryTodayValue = todayPrices[subSource]['Buy'];\n\t\t\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t{/* <td>\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => deleteFromInventory(subSource)}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</td> */}\n\t\t\t\t<td>{numberWithCommas(parseInt(amount) * inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(amount)}</td>\n\t\t\t\t<td>{labelTranslations[subSource]}</td>\n\t\t\t\t<th scope=\"row\">{index + 1}</th>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{tableBody}</tbody>;\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventory: state.inventoryList,\n\t\ttodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps,{deleteFromInventory})(TableBody);\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport numberWithCommas from '../NumberWithCommas';\n\nconst AllInventoryValue = () => {\n    const todayPrices = useSelector(state => state.allTodayPrices)\n    const inventoryList = useSelector(state => state.inventoryList)\n\n    let allValue = inventoryList.reduce((total,inventory) => {\n        return total + (todayPrices[inventory.subSource][\"Buy\"] * inventory.amount)\n    },0)\n    \n    return <span>{numberWithCommas(allValue)}</span>\n}\n\nexport default AllInventoryValue\n\n","import React from 'react'\nimport TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport AllInventoryValue from '../AllInventoryValue'\n\nconst Table = () => {\n    return(\n        <table className=\"table table-striped table-borderless\">\n            <TableHead />\n            <TableBody />\n            <tbody>\n                <tr>\n                    <td id=\"all-value\" colSpan=\"2\" >ارزش کل دارایی : {AllInventoryValue()}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport randomColor from 'randomcolor'\n\n\nconst PieChart = props => {\n\tconst labels = props.inventoryList.map(asset => props.labelTranslations[asset.subSource])\n\tconst values = props.inventoryList.map(asset => (parseInt(props.allTodayPrices[asset.subSource].Buy) * parseInt(asset.amount)))\n\tconst colors = randomColor({count:6})\n\t\n\tconst data = {\n        labels,\n        datasets: [{\n            label: '# of Votes',\n            data: values,\n            backgroundColor: colors,\n            borderWidth: 1\n        }]\n    }\n\treturn (\n\t\t<>\n\t\t\t<Doughnut data={data} />\n\t\t</>\n\t);\n};\n\n\nexport default PieChart","import React from 'react'\nimport {Line} from 'react-chartjs-2';\n\nconst LineChart = () => {\n    const data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [\n          {\n            label: 'نمودار تغییرات ارزش کل دارایی',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40]\n          }\n        ]\n      };\n\n    return (\n        <Line data={data} />\n    )\n}\n\nexport default LineChart","import React from 'react';\nimport { connect } from 'react-redux';\nimport PieChart from './PieChart';\nimport LineChart from './LineChart';\n\nconst Charts = props => {\n\tif(!props.inventoryList.length){\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"chart-page\">\n\t\t\t<PieChart\n\t\t\t\tallTodayPrices={props.allTodayPrices}\n\t\t\t\tinventoryList={props.inventoryList}\n\t\t\t\tlabelTranslations={props.labelTranslations}\n\t\t\t/>\n\t\t\t<LineChart />\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tallTodayPrices: state.allTodayPrices,\n\t\tinventoryList: state.inventoryList,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, {})(Charts);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice } from '../actions';\nimport { connect } from 'react-redux';\nimport NoInventoryWarning from './NoInventoryWarning';\nimport Table from './table/Table';\nimport Charts from './charts/Charts';\n\nclass Inventory extends Component {\n\tasync componentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderContent = () => {\n\t\tconst { inventoryList } = this.props;\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn <Table />;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div id=\"inventory-page\">\n\t\t\t\t\t{this.renderContent()}\n\t\t\t\t\t<Link id=\"addInventoryLink\" to={process.env.PUBLIC_URL + '/addInventory'}>\n\t\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<Charts />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryList: state.inventoryList,\n\t};\n};\n\nexport default connect(mapStateToProps, { getDayPrice })(Inventory);\n","import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryList:inventoryReducer\n})","export const inventoryLabels = () => {\n  const labels = {\n    \"Gold\": [\"1 Emami\",\"1 Old Azadi\", \"1/2 Azadi\", \"1/4 Azadi\"],\n    \"Currency\": [\"US Dollar\", \"Euro\",\"British Pound\",\"Canadian Dollar\"],\n    \"Crypto\":[\"BitCoin\"],\n    \"others\": [\"stock\"]\n  };\n\n  return labels;\n};\n\nexport const labelTranslations = () => {\n  const translations = {\n    \"Gold\":\"سکه\",\n    \"1 Emami\":\"تمام سکه\",\n    \"1 Old Azadi\":\"تمام سکه طرح قدیم\",\n    \"1/2 Azadi\":\"نیم سکه\",\n    \"1/4 Azadi\":\"ربع سکه\",\n    \"Currency\":\"ارز\",\n    \"US Dollar\":\"دلار آمریکا\",\n    \"Euro\":\"یورو\",\n    \"British Pound\":\"پوند انگلیس\",\n    \"Canadian Dollar\":\"دلار کانادا\",\n    \"Crypto\":\"ارز دیجیتال\",\n    \"BitCoin\":\"بیت کوین\",\n    \"others\":\"دیگر منابع\",\n    \"stock\":\"بورس\"\n  };\n\n  return translations;\n};\n","import * as types from '../constants/actionTypes'\nimport _ from 'lodash'\n\nexport default (state={\"stock\":{\"Buy\":1}},action) => {\n    switch(action.type){\n        case types.GET_DAY_PRICE:\n            const currencyPrices = _.keyBy(action.payload[\"Currency\"],\"Currency\")\n            const goldPrices = _.keyBy(action.payload[\"Gold\"],\"Coin\")\n            let cryptoPrices = _.keyBy(action.payload[\"Crypto\"],\"Currency\")\n\n            // converting bitcoin price from Dollar to Toman\n            cryptoPrices[\"BitCoin\"][\"Buy\"] = cryptoPrices[\"BitCoin\"][\"Buy\"] * currencyPrices[\"US Dollar\"][\"Buy\"]\n\n            const allPrices = {...state,...currencyPrices,...goldPrices,...cryptoPrices}\n            \n            return allPrices\n        default:\n            return state    \n    }\n}","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY } from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\tconst duplicateInventory = state.find(inventory => inventory.subSource === action.payload.subSource);\n\n\t\t\tif (duplicateInventory) {\n\t\t\t\treturn state.map(inventory => {\n\t\t\t\t\tif (inventory.subSource === duplicateInventory.subSource) {\n\t\t\t\t\t\treturn { ...inventory, amount: action.payload.amount };\n\t\t\t\t\t}\n\t\t\t\t\treturn inventory;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [...state, action.payload];\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport AddInventory from './AddInventory';\nimport Inventory from './Inventory';\nimport history from '../history';\n\nimport '../stylesheets/style.css'\n\nexport default function App() {\n\treturn (\n\t\t<div id=\"app\">\n\t\t\t<Router history={history}>\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'} component={Inventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addInventory'} component={AddInventory} />\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}