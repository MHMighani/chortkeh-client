{"version":3,"sources":["history.jsx","api/api.js","actions/index.jsx","constants/actionTypes.jsx","NumberWithCommas.js","components/Calculator.jsx","components/forms/AddInventoryForm.jsx","components/AddInventory.jsx","components/NoInventoryWarning.jsx","components/table/TableHead.jsx","components/table/TableBody.jsx","components/AllInventoryValue.jsx","components/table/Table.jsx","components/Inventory.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","reducers/inventoryReducer.jsx","index.jsx","components/App.jsx"],"names":["createBrowserHistory","getPricesApi","a","axios","get","response","data","getDayPrice","dispatch","dayPrices","type","payload","addToInventory","formValues","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","todayPrices","useSelector","state","allTodayPrices","id","className","AddInventoryForm","getSelectOptions","optionsList","map","option","index","key","value","props","labelTranslations","renderSelector","input","label","meta","options","renderError","renderInput","min","renderSubSourceLabel","mainSource","this","error","touched","handleSubmit","mainSourceOptionsList","Object","keys","inventoryLabels","subSourceOptionsList","onSubmit","Field","name","component","to","process","Component","selector","formValueSelector","reduxForm","form","validate","errors","parseInt","connect","change","AddInventory","toast","notify","duration","initialValues","NoInventoryWarning","TableHead","scope","inventory","inventoryList","deleteFromInventory","tableBody","inventoryTodayValue","AllInventoryValue","allValue","reduce","total","Table","colSpan","Inventory","renderContent","length","combineReducers","formReducer","action","currencyPrices","_","keyBy","goldPrices","allPrices","duplicateInventory","find","newState","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","history","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.a538e80a.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import axios from 'axios'\n\nexport const getPricesApi = async () => {\n    const url = \"https://currency.jafari.pw/json\"\n\n    const response = await axios.get(url)\n\n    return response.data\n}","import * as types from '../constants/actionTypes'\nimport history from '../history'\nimport {getPricesApi} from '../api/api'\n\nexport const getDayPrice = () => async(dispatch) => {\n    const dayPrices = await getPricesApi()\n    \n    dispatch({type:types.GET_DAY_PRICE,payload:dayPrices})\n}\n\nexport const addToInventory = formValues => async(dispatch) => {\n    dispatch({type:types.ADD_TO_INVENTORY,payload:formValues})\n}\n\nexport const deleteFromInventory = subSource => async(dispatch) => {\n    dispatch({type:types.DELETE_FROM_INVENTORY, payload:subSource})\n}","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport numberWithCommas from '../NumberWithCommas';\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div id=\"calculator\" className=\"form-section\">\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت روز</span>\n\t\t\t\t<span>{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<i className=\"fas fa-times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>تعداد</span>\n\t\t\t\t<span>{numberWithCommas(amount)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت کل</span>\n\t\t\t\t<span >{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { addToInventory, getDayPrice } from '../../actions';\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport Calculator from '../Calculator';\n\nimport React, { Component } from 'react';\n\nclass AddInventoryForm extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderError({ error, touched }) {\n\t\tif (error && touched) {\n\t\t\treturn <div className=\"error-wraper\">{error}</div>;\n\t\t}\n\t}\n\n\tgetSelectOptions = optionsList => {\n\t\tlet options = optionsList.map((option, index) => (\n\t\t\t<option key={index} value={option}>\n\t\t\t\t{this.props.labelTranslations[option]}\n\t\t\t</option>\n\t\t));\n\t\treturn options;\n\t};\n\n\trenderSelector = ({ input, label, meta, options }) => {\n\t\treturn (\n\t\t\t<div className=\"col-wrapper\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t<select type=\"select\" {...input}>\n\t\t\t\t\t\t{options}\n\t\t\t\t\t</select>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderInput = ({ input, label, meta }) => {\n\t\treturn (\n\t\t\t<div className=\"col-wrapper\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t<input min=\"0\" type=\"number\" {...input} />\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t</div>\n\t\t\t\t{this.renderError(meta)}\t\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t};\n\n\t// for rendering subSource label translation\n\trenderSubSourceLabel = mainSource => {\n\t\tif (mainSource === 'others') {\n\t\t\treturn 'منبع';\n\t\t} else if (!mainSource) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn this.props.labelTranslations[mainSource];\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { handleSubmit, mainSource, subSource, amount } = this.props;\n\t\tconst mainSourceOptionsList = [...[''], ...Object.keys(this.props.inventoryLabels)];\n\t\tconst subSourceOptionsList = mainSource ? [...[''], ...this.props.inventoryLabels[mainSource]] : [''];\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit(this.props.onSubmit)}>\n\t\t\t\t<div className=\"form-section\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\t\tlabel={`نوع ${this.renderSubSourceLabel(mainSource)}`}\n\t\t\t\t\t\tcomponent={this.renderSelector}\n\t\t\t\t\t\toptions={this.getSelectOptions(subSourceOptionsList)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field name=\"amount\" label=\"مقدار\" component={this.renderInput} />\n\t\t\t\t</div>\n\t\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t<button className=\"button\" id=\"submit-btn\" type=\"submit\">تایید</button>\n\t\t\t\t\t<Link className=\"button\" to={`${process.env.PUBLIC_URL}`} id=\"return-btn\" >بازگشت</Link>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tlabelTranslations: state.labelTranslations,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = formValues => {\n\tconst errors = {};\n\n\tif (!formValues.mainSource) {\n\t\terrors['mainSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!formValues.subSource) {\n\t\terrors['subSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!parseInt(formValues.amount)) {\n\t\terrors['amount'] = 'لطفا مقدار دارایی را مشخص کنید';\n\t}\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate,\n})(connect(mapStateToProps, { addToInventory, getDayPrice, change })(AddInventoryForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddInventoryForm from './forms/AddInventoryForm';\nimport { addToInventory } from '../actions';\nimport toast from 'toasted-notes'\nimport 'toasted-notes/src/styles.css'\n\nclass AddInventory extends Component {\n\thandleSubmit = formValues => {\n\t\tthis.props.addToInventory(formValues);\n\t\ttoast.notify('به دارایی اضافه شد',{\n\t\t\tduration:2000\n\t\t})\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"form-page\">\n\t\t\t\t<AddInventoryForm\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tinitialValues={{ amount: 0, mainSource: '', subSource: '' }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react';\n\nconst NoInventoryWarning = () => {\n\tconst message = '!هنوز چیزی به دارایی اضافه نکرده اید';\n\treturn (\n\t\t<div id=\"no-inventory-warning\">\n\t\t\t<p>{message}</p>\n\t\t</div>\n\t);\n};\n\nexport default NoInventoryWarning;\n","import React from 'react';\n\nconst TableHead = props => {\n\tconst tableHead = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t{/* <th></th> */}\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableHead;\n};\n\nexport default TableHead;\n","import React from 'react';\nimport {deleteFromInventory} from '../../actions'\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../../NumberWithCommas';\n\nconst TableBody = props => {\n\tconst tableBody = props.inventory.map((inventory, index) => {\n\t\tconst { labelTranslations, todayPrices,deleteFromInventory } = props;\n\t\tconst { subSource, amount } = inventory;\n\t\tconst inventoryTodayValue = todayPrices[subSource]['Buy'];\n\t\t\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t{/* <td>\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => deleteFromInventory(subSource)}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</td> */}\n\t\t\t\t<td>{numberWithCommas(parseInt(amount) * inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(amount)}</td>\n\t\t\t\t<td>{labelTranslations[subSource]}</td>\n\t\t\t\t<th scope=\"row\">{index + 1}</th>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{tableBody}</tbody>;\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventory: state.inventoryList,\n\t\ttodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps,{deleteFromInventory})(TableBody);\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport numberWithCommas from '../NumberWithCommas';\n\nconst AllInventoryValue = () => {\n    const todayPrices = useSelector(state => state.allTodayPrices)\n    const inventoryList = useSelector(state => state.inventoryList)\n\n    let allValue = inventoryList.reduce((total,inventory) => {\n        return total + (todayPrices[inventory.subSource][\"Buy\"] * inventory.amount)\n    },0)\n    \n    return <span>{numberWithCommas(allValue)}</span>\n}\n\nexport default AllInventoryValue\n\n","import React from 'react'\nimport TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport AllInventoryValue from '../AllInventoryValue'\n\nconst Table = () => {\n    return(\n        <table className=\"table table-striped table-borderless\">\n            <TableHead />\n            <TableBody />\n            <tbody>\n                <tr>\n                    <td id=\"all-value\" colSpan=\"2\" >ارزش کل دارایی : {AllInventoryValue()}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice } from '../actions';\nimport { connect } from 'react-redux';\nimport NoInventoryWarning from './NoInventoryWarning';\nimport Table from './table/Table';\n\nclass Inventory extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getDayPrice();\n\t}\n\n\trenderContent = () => {\n\t\tconst { inventoryList } = this.props;\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn <Table />;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"inventory-page\">\n\t\t\t\t\t{this.renderContent()}\n\t\t\t\t\t<Link id=\"addInventoryLink\" to={process.env.PUBLIC_URL + '/addInventory'}>\n\t\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tinventoryList: state.inventoryList,\n\t};\n};\n\nexport default connect(mapStateToProps, { getDayPrice })(Inventory);\n","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryList:inventoryReducer\n})","export const inventoryLabels = () => {\n  const labels = {\n    \"Gold\": [\"1 Emami\", \"1/2 Azadi\", \"1/4 Azadi\"],\n    \"Currency\": [\"US Dollar\", \"Euro\"],\n    \"others\": [\"stock\"]\n  };\n\n  return labels;\n};\n\nexport const labelTranslations = () => {\n  const translations = {\n    \"Gold\":\"سکه\",\n    \"1 Emami\":\"تمام سکه\",\n    \"1/2 Azadi\":\"نیم سکه\",\n    \"1/4 Azadi\":\"ربع سکه\",\n    \"Currency\":\"ارز\",\n    \"US Dollar\":\"دلار آمریکا\",\n    \"Euro\":\"یورو\",\n    \"others\":\"دیگر منابع\",\n    \"stock\":\"بورس\"\n  };\n\n  return translations;\n};\n","import * as types from '../constants/actionTypes'\nimport _ from 'lodash'\n\nexport default (state={\"stock\":{\"Buy\":1}},action) => {\n    switch(action.type){\n        case types.GET_DAY_PRICE:\n            const currencyPrices = _.keyBy(action.payload[\"Currency\"],\"Currency\")\n            const goldPrices = _.keyBy(action.payload[\"Gold\"],\"Coin\")\n            const allPrices = {...state,...currencyPrices,...goldPrices}\n            \n            return allPrices\n        default:\n            return state    \n    }\n}","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY } from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\tconst duplicateInventory = state.find(inventory => inventory.subSource === action.payload.subSource);\n\n\t\t\tif (duplicateInventory) {\n\t\t\t\treturn state.map(inventory => {\n\t\t\t\t\tif (inventory.subSource === duplicateInventory.subSource) {\n\t\t\t\t\t\treturn { ...inventory, amount: action.payload.amount };\n\t\t\t\t\t}\n\t\t\t\t\treturn inventory;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [...state, action.payload];\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport AddInventory from './AddInventory';\nimport Inventory from './Inventory';\nimport history from '../history';\n\nimport '../stylesheets/style.css'\n\nexport default function App() {\n\treturn (\n\t\t<div id=\"app\">\n\t\t\t<Router history={history}>\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'} component={Inventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addInventory'} component={AddInventory} />\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}