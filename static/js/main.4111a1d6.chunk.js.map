{"version":3,"sources":["api/api.js","actions/index.jsx","constants/actionTypes.jsx","components/forms/RenderError.jsx","components/forms/RenderInput.jsx","components/forms/AddSourceForm.jsx","components/modals/useModal.jsx","components/modals/Modal.jsx","components/forms/RenderSelector.jsx","NumberWithCommas.js","components/Calculator/index.jsx","components/forms/AddInventoryForm.jsx","components/AddInventory/index.jsx","components/NoInventoryWarning/index.jsx","components/table/TableHead.jsx","components/table/TableBody.jsx","components/AllInventoryValue.jsx","components/table/Table.jsx","components/charts/PieChart.jsx","components/charts/ChartFilter.jsx","components/charts/Charts.jsx","components/Inventory/index.jsx","history.jsx","components/App.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","reducers/inventoryReducer.jsx","index.jsx"],"names":["getPricesApi","a","axios","get","response","data","getBitCoinPrice","bpi","getDayPrice","dispatch","dayPrices","bitCoinResponse","bitCoinPrice","parseInt","USD","rate_float","cryptoPrice","Crypto","Currency","Buy","allPrices","type","payload","RenderError","error","touched","className","RenderInput","input","label","meta","min","autoComplete","reduxForm","form","initialValues","newSourceValue","newSourceName","validate","formValues","errors","connect","addNewSource","getState","allTodayPrices","handleSubmit","onSubmit","message","toast","notify","duration","Field","name","component","useModal","useState","isShowing","setIsShowing","onEscKeyDown","e","key","useEffect","window","addEventListener","removeEventListener","toggle","Modal","hide","children","ReactDOM","createPortal","Fragment","onClick","aria-modal","aria-hidden","tabIndex","role","stopPropagation","data-dismiss","aria-label","document","body","RenderSelector","button","options","mainSource","id","icon","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","todayPrices","useSelector","state","selector","formValueSelector","inventoryLabels","labelTranslations","change","props","getSelectOptions","optionsList","map","option","index","value","mainSourceOptionsList","Object","keys","subSourceOptionsList","renderSelector","renderSubSourceLabel","to","process","addToInventory","untouch","NoInventoryWarning","TableHead","scope","inventory","inventoryList","deleteFromInventory","tableBody","inventoryTodayValue","AllInventoryValue","allValue","reduce","total","Table","colSpan","PieChart","values","labels","datasets","backgroundColor","randomColor","count","borderWidth","maintainAspectRatio","legend","fontSize","ChartFilter","chartFormatToggle","onChange","target","htmlFor","chartFormat","setChartFormat","inventoryObj","forEach","asset","sourceName","assetValue","getValuesAndLabels","length","createBrowserHistory","library","add","faTimes","faEdit","faPlus","App","history","exact","path","Inventory","AddInventory","AddSourceForm","combineReducers","formReducer","action","others","translations","newSource","currencyPrices","_","keyBy","goldPrices","cryptoPrices","duplicateInventory","find","newState","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","querySelector"],"mappings":"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","file":"static/js/main.4111a1d6.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getPricesApi = async () => {\n    const url = \"https://currency.jafari.pw/json\"\n\n    const response = await axios.get(url)\n\n    return response.data\n}\n\nexport const getBitCoinPrice = async () => {\n    const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\"\n\n    const response = await axios.get(url)\n\n    return response.data.bpi\n}\n","import * as types from '../constants/actionTypes';\nimport { getPricesApi, getBitCoinPrice } from '../api/api';\n\nexport const getDayPrice = () => async dispatch => {\n\tconst dayPrices = await getPricesApi();\n    const bitCoinResponse = await getBitCoinPrice();\n    const bitCoinPrice = parseInt(bitCoinResponse.USD.rate_float)\n\tconst cryptoPrice = { Crypto: [{ Currency: 'BitCoin', Buy: bitCoinPrice }]};\n    \n\tconst allPrices = { ...dayPrices, ...cryptoPrice };\n    \n\tdispatch({ type: types.GET_DAY_PRICE, payload: allPrices });\n};\n\nexport const addToInventory = formValues => async dispatch => {\n\tdispatch({ type: types.ADD_TO_INVENTORY, payload: formValues });\n};\n\nexport const deleteFromInventory = subSource => async dispatch => {\n\tdispatch({ type: types.DELETE_FROM_INVENTORY, payload: subSource });\n};\n\nexport const addNewSource = formValues => async (dispatch,getState) => {\n\tconst {allTodayPrices} = getState();\n\tif(formValues.newSourceName in allTodayPrices){\n\t\treturn 1\n\t}\n\tdispatch({type: types.ADD_SOURCE, payload: formValues});\n}","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"\nexport const ADD_SOURCE = \"ADD_SOURCE\"","import React from 'react'\n\nconst RenderError = ({ error, touched }) => {\n    if (error && touched) {\n        return <div className=\"error-wraper\">{error}</div>;\n    }\n\n    return null\n}\n\nexport default RenderError","import React from 'react'\nimport RenderError from './RenderError'\n\nconst RenderInput = ({ input, label, meta, type=\"text\" }) => {\n    return (\n        <div className=\"col-wrapper\">\n            <div className=\"input-wrapper\">\n                <input min=\"0\" type={type} {...input} autoComplete=\"off\" />\n                <label>{label}</label>\n            </div>\n            <RenderError error={meta.error} touched={meta.touched} />\n        </div>\n    );\n};\n\nexport default RenderInput","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport RenderInput from './RenderInput';\nimport { connect } from 'react-redux';\nimport { addNewSource } from '../../actions';\nimport toast from 'toasted-notes';\n\nimport 'toasted-notes/src/styles.css';\n\nconst AddSourceForm = ({ handleSubmit,addNewSource }) => {\n\tconst onSubmit = async (formValues) => {\n\t\tconst response = await addNewSource(formValues);\n\t\tconst message = !response?\"نام دارایی جدید با موفقیت ثبت شد\":\"این دارایی قبلا ثبت شده است\";\n\t\ttoast.notify(() => (\n\t\t\t<div className={`toast ${!response?\"success\":\"warning\"}-toast`}>{message}</div>\n\t\t),{duration:1500})\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"addsource-form\">\n\t\t\t\t<Field name=\"newSourceName\" label=\"نام منبع جدید\" component={RenderInput} />\n\t\t\t\t<Field name=\"newSourceValue\" type=\"number\" label=\"ارزش\" component={RenderInput} />\n\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t<button className=\"button\">تایید</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.newSourceName) {\n\t\terrors['newSourceName'] = 'لطفا نام منبع را مشخص کنید';\n\t} else if (!formValues.newSourceValue) {\n\t\terrors['newSourceValue'] = 'لطفا ارزش منبع جدید را مشخص کنید';\n\t}\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'AddSourceForm',\n\tinitialValues:{newSourceValue:1,newSourceName:\"بورس\"},\n\tvalidate,\n})(connect(null, { addNewSource })(AddSourceForm));\n","import { useState, useEffect } from 'react';\n\nconst useModal = () => {\n\tconst [isShowing, setIsShowing] = useState(false);\n\n\tconst onEscKeyDown = (e) => {\n\t\tif (!isShowing || e.key !== 'Escape') return;\n\t\tsetIsShowing(false);\n\t};\n\n\tuseEffect(() => {\n    window.addEventListener('keydown', onEscKeyDown, false);\n    return () => {\n      window.removeEventListener('keydown',onEscKeyDown,false)\n    }\n\t});\n\n\tfunction toggle() {\n\t\tsetIsShowing(!isShowing);\n\t}\n\n\treturn {\n\t\tisShowing,\n\t\ttoggle,\n\t};\n};\n\nexport default useModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss'\n\nconst Modal = ({ isShowing, hide, children }) =>\n\tisShowing\n\t\t? ReactDOM.createPortal(\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"modal-overlay\" />\n\t\t\t\t\t<div className=\"modal-wrapper\" onClick={hide} aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n\t\t\t\t\t\t<div className=\"modal\" onClick={e => e.stopPropagation()}>\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"modal-close-button\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\tonClick={hide}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>,\n\t\t\t\tdocument.body\n\t\t  )\n\t\t: null;\n\n\n\nexport default Modal;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport AddSourceForm from './AddSourceForm';\nimport RenderError from './RenderError';\nimport useModal from '../modals/useModal';\nimport Modal from '../modals/Modal';\n\n\nconst RenderSelector = ({ input, label, meta, options,mainSource }) => {\n    const { isShowing, toggle } = useModal();\n    let button;\n    if (mainSource === 'others' && input.name === 'subSource') {\n        button = (\n            <button id=\"add-source-btn\" className=\"button\" onClick={toggle}>\n                <FontAwesomeIcon icon=\"plus\" />\n            </button>\n        );\n    }\n\n    if (isShowing) {\n        return (\n            <Modal isShowing={isShowing} hide={toggle}>\n                <AddSourceForm />\n            </Modal>\n        );\n    }\n\n    return (\n        <div className=\"col-wrapper\">\n            <div className=\"input-wrapper\">\n                {button}\n                <select type=\"select\" {...input}>\n                    {options}\n                </select>\n                <label>{label}</label>\n            </div>\n            <RenderError error={meta.error} touched={meta.touched} />\n        </div>\n    );\n};\n\nexport default RenderSelector;","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport numberWithCommas from '../../NumberWithCommas';\n\nimport './style.scss'\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div id=\"calculator\" className=\"form-section\">\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت روز</span>\n\t\t\t\t<span>{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>تعداد</span>\n\t\t\t\t<span>{numberWithCommas(amount)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"unit-label\">تومان</div>\n\t\t\t\t\t<span>قیمت کل</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<span >{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import React, { useEffect } from 'react';\nimport { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { getDayPrice } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport RenderInput from './RenderInput';\n\nimport renderSelector from './RenderSelector';\nimport Calculator from '../Calculator';\n\nimport './style.scss';\n\nconst AddInventoryForm = (props) => {\n\tuseEffect(() => {\n\t\tprops.getDayPrice();\n\t});\n\n\tconst getSelectOptions = (optionsList) => {\n\t\tlet options = optionsList.map((option, index) => (\n\t\t\t<option key={index} value={option}>\n\t\t\t\t{props.labelTranslations[option]}\n\t\t\t</option>\n\t\t));\n\t\treturn options;\n\t};\n\n\t// for rendering subSource label translation\n\tconst renderSubSourceLabel = (mainSource) => {\n\t\tif (mainSource === 'others' || !mainSource) {\n\t\t\treturn '';\n\t\t} else if (mainSource === 'Crypto') {\n\t\t\treturn 'ارز';\n\t\t} else {\n\t\t\treturn props.labelTranslations[mainSource];\n\t\t}\n\t};\n\n\tconst { handleSubmit, mainSource, subSource, amount } = props;\n\tconst mainSourceOptionsList = [...[''], ...Object.keys(props.inventoryLabels)];\n\tconst subSourceOptionsList = mainSource ? [...[''], ...props.inventoryLabels[mainSource]] : [''];\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(props.onSubmit)}>\n\t\t\t<div className=\"form-section\">\n\t\t\t\t<Field\n\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\tcomponent={renderSelector}\n\t\t\t\t\toptions={getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\tlabel={`نوع ${renderSubSourceLabel(mainSource)}`}\n\t\t\t\t\tmainSource = {props.mainSource}\n\t\t\t\t\tcomponent={renderSelector}\n\t\t\t\t\toptions={getSelectOptions(subSourceOptionsList)}\n\t\t\t\t/>\n\t\t\t\t<Field name=\"amount\" label=\"مقدار\" type=\"number\" component={RenderInput} />\n\t\t\t</div>\n\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t<button className=\"button\" id=\"submit-btn\" type=\"submit\">\n\t\t\t\t\tتایید\n\t\t\t\t</button>\n\t\t\t\t<Link className=\"button\" to={`${process.env.PUBLIC_URL}`} id=\"return-btn\">\n\t\t\t\t\tبازگشت\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tlabelTranslations: state.labelTranslations,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.mainSource) {\n\t\terrors['mainSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!formValues.subSource) {\n\t\terrors['subSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!parseInt(formValues.amount)) {\n\t\terrors['amount'] = 'لطفا مقدار دارایی را مشخص کنید';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate,\n})(connect(mapStateToProps, { getDayPrice, change })(AddInventoryForm));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { change,untouch } from 'redux-form'\nimport AddInventoryForm from '../forms/AddInventoryForm';\nimport { addToInventory } from '../../actions';\nimport toast from 'toasted-notes';\n\nimport './style.scss';\nimport 'toasted-notes/src/styles.css';\n\nconst AddInventory = ({addToInventory}) => {\n\tconst handleSubmit = (formValues,dispatch) => {\n\t\taddToInventory(formValues);\n\t\t\n\t\tdispatch(change('addInventoryForm','amount',''))\n\t\tdispatch(untouch('addInventoryForm','amount',''))\n\n\t\ttoast.notify(() => <div className=\"toast success-toast\">به دارایی اضافه شد</div>,{\n\t\t\tduration:2000\n\t\t})\n\t};\n\n\t\n\t\treturn (\n\t\t\t<div className=\"form-page\">\n\t\t\t\t<AddInventoryForm\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\tinitialValues={{ amount: 0, mainSource: '', subSource: '' }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react';\n\nimport './style.scss'\n\nconst NoInventoryWarning = () => {\n\tconst message = '!هنوز چیزی به دارایی اضافه نکرده اید';\n\treturn (\n\t\t<div id=\"no-inventory-warning\">\n\t\t\t<p>{message}</p>\n\t\t</div>\n\t);\n};\n\nexport default NoInventoryWarning;\n","import React from 'react';\n\nconst TableHead = props => {\n\tconst tableHead = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\"></th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableHead;\n};\n\nexport default TableHead;\n","import React from 'react';\nimport { deleteFromInventory } from '../../actions';\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../../NumberWithCommas';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst TableBody = (props) => {\n\tconst tableBody = props.inventory.map((inventory, index) => {\n\t\tconst { labelTranslations, todayPrices, deleteFromInventory } = props;\n\t\tconst { subSource, amount } = inventory;\n\t\tconst inventoryTodayValue = todayPrices[subSource]['Buy'];\n\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{labelTranslations[subSource]}</td>\n\t\t\t\t<td>{numberWithCommas(amount)}</td>\n\t\t\t\t<td>{numberWithCommas(inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(parseInt(amount) * inventoryTodayValue)}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"button table-delete-btn\" onClick={() => deleteFromInventory(subSource)}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className=\"button success table-edit-btn\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"edit\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{tableBody}</tbody>;\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventory: state.inventoryList,\n\t\ttodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, { deleteFromInventory })(TableBody);\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport numberWithCommas from '../NumberWithCommas';\n\nconst AllInventoryValue = () => {\n    const todayPrices = useSelector(state => state.allTodayPrices)\n    const inventoryList = useSelector(state => state.inventoryList)\n\n    let allValue = inventoryList.reduce((total,inventory) => {\n        return total + (todayPrices[inventory.subSource][\"Buy\"] * inventory.amount)\n    },0)\n    \n    return <span>{numberWithCommas(allValue)}</span>\n}\n\nexport default AllInventoryValue\n\n","import React from 'react'\nimport TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport AllInventoryValue from '../AllInventoryValue'\n\nimport './style.scss'\n\nconst Table = () => {\n    return(\n        <table>\n            <TableHead />\n            <TableBody />\n            <tbody>\n                <tr>\n                    <td id=\"all-value\" colSpan=\"2\">{AllInventoryValue()}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport randomColor from 'randomcolor'\n\n\nconst PieChart = ({values,labels}) => {\n\tconst colors = randomColor({count:6})\n\t\n\tconst options = {\n\t\tmaintainAspectRatio: false,\n\t\tlegend:{\n\t\t\tlabels:{\n\t\t\t\tfontSize:22\n\t\t\t}\n\t\t}\n\t}\n\n\tconst data = {\n        labels,\n        datasets: [{\n            label: '# of Votes',\n            data: values,\n            backgroundColor: colors,\n            borderWidth: 1\n        }]\n    }\n\treturn (\n\t\t<>\n\t\t\t<Doughnut data={data} options={options} />\n\t\t</>\n\t);\n};\n\n\nexport default PieChart","import React from 'react';\n\nconst ChartFilter  = ({chartFormatToggle}) => {\n    return (\n        <form>\n            <select name=\"chart-filter\" onChange={e => chartFormatToggle(e.target.value)}>\n                <option value=\"subSource\">منبع</option>\n                <option value=\"mainSource\">نوع منبع</option>\n            </select>\n            <label htmlFor=\"chart-filter\">  نمودار براساس</label>\n        </form>\n    )\n}\n\nexport default ChartFilter","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PieChart from './PieChart';\nimport ChartFilter from './ChartFilter';\nimport './style.scss';\n\nconst Charts = (props) => {\n\tconst [chartFormat, setChartFormat] = useState('subSource');\n\n\tconst getValuesAndLabels = () => {\n\t\tlet inventoryObj = {};\n\n\t\tprops.inventoryList.forEach((asset) => {\n\t\t\tlet sourceName = props.labelTranslations[asset[chartFormat]];\n\t\t\tlet assetValue = +props.allTodayPrices[asset.subSource].Buy * +asset.amount;\n\t\t\tif (sourceName in inventoryObj) {\n\t\t\t\tinventoryObj[sourceName] += assetValue;\n\t\t\t} else {\n\t\t\t\tinventoryObj[sourceName] = assetValue;\n\t\t\t}\n\t\t});\n\n\t\tconst labels = Object.keys(inventoryObj);\n\t\tconst values = Object.values(inventoryObj);\n\n\t\treturn [labels, values];\n\t};\n\n\tconst [labels, values] = getValuesAndLabels();\n\n\tif (!props.inventoryList.length) return null;\n\n\treturn (\n\t\t<div className=\"chart-page\">\n\t\t\t<ChartFilter chartFormatToggle={setChartFormat} />\n\t\t\t<div className=\"chart-container\">\n\t\t\t\t<PieChart\n\t\t\t\t\tallTodayPrices={props.allTodayPrices}\n\t\t\t\t\tvalues={values}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tlabelTranslations={props.labelTranslations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallTodayPrices: state.allTodayPrices,\n\t\tinventoryList: state.inventoryList,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, {})(Charts);\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice } from '../../actions';\nimport { connect } from 'react-redux';\nimport NoInventoryWarning from '../NoInventoryWarning';\nimport Table from '../table/Table';\nimport Charts from '../charts/Charts';\n\nimport './style.scss';\n\nconst Inventory = ({getDayPrice,inventoryList}) => {\n\tuseEffect(() => {\n\t\tgetDayPrice();\n\t});\n\n\tconst renderContent = () => {\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn <Table />;\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"inventory-page\">\n\t\t\t\t{renderContent()}\n\t\t\t\t<Link className=\"button\" id=\"addInventoryLink\" to={process.env.PUBLIC_URL + '/addInventory'}>\n\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<Charts />\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventoryList: state.inventoryList,\n\t};\n};\n\nexport default connect(mapStateToProps, { getDayPrice })(Inventory);\n","import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport AddInventory from './AddInventory';\nimport Inventory from './Inventory';\nimport history from '../history';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport AddSourceForm from './forms/AddSourceForm';\n\nimport '../style.scss';\n\nlibrary.add(faTimes, faEdit, faPlus);\n\nconst App = () => {\n\treturn (\n\t\t<div id=\"app\">\n\t\t\t<Router history={history}>\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'} component={Inventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addInventory'} component={AddInventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addSource'} component={AddSourceForm} />\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryList:inventoryReducer\n})","import { ADD_SOURCE } from '../constants/actionTypes'\n\nexport const inventoryLabels = (state={},action) => {\n  let labels = {\n    \"Gold\": [\"1 Emami\",\"1 Old Azadi\", \"1/2 Azadi\", \"1/4 Azadi\"],\n    \"Currency\": [\"US Dollar\", \"Euro\",\"British Pound\",\"Canadian Dollar\"],\n    \"Crypto\":[\"BitCoin\"],\n    \"others\": []\n  };\n\n  if(!Object.keys(state).length){\n    return {...state,...labels}\n  }\n  \n  switch(action.type){\n    case ADD_SOURCE:\n      \n      return {...state,\"others\":[...state.others,action.payload.newSourceName]}\n    default:\n      return state\n  }\n};\n\nexport const labelTranslations = (state={},action) => {\n  const translations = {\n    \"Gold\":\"سکه\",\n    \"1 Emami\":\"تمام سکه\",\n    \"1 Old Azadi\":\"تمام سکه طرح قدیم\",\n    \"1/2 Azadi\":\"نیم سکه\",\n    \"1/4 Azadi\":\"ربع سکه\",\n    \"Currency\":\"ارز\",\n    \"US Dollar\":\"دلار آمریکا\",\n    \"Euro\":\"یورو\",\n    \"British Pound\":\"پوند انگلیس\",\n    \"Canadian Dollar\":\"دلار کانادا\",\n    \"Crypto\":\"ارز دیجیتال\",\n    \"BitCoin\":\"بیت کوین\",\n    \"others\":\"دیگر منابع\",\n    // \"stock\":\"بورس\"\n  };\n\n  if(!Object.keys(state).length){\n    return {...state,...translations}\n  }\n\n  switch(action.type){\n    case ADD_SOURCE:\n      const newSource = action.payload.newSourceName\n      \n      return {...state,[newSource]:newSource}\n    default: \n      return state\n  }\n};\n","import { GET_DAY_PRICE,ADD_SOURCE } from '../constants/actionTypes'\nimport _ from 'lodash'\n\nexport default (state={},action) => {\n    switch(action.type){\n        case GET_DAY_PRICE:\n            const currencyPrices = _.keyBy(action.payload[\"Currency\"],\"Currency\")\n            const goldPrices = _.keyBy(action.payload[\"Gold\"],\"Coin\")\n            let cryptoPrices = _.keyBy(action.payload[\"Crypto\"],\"Currency\")\n\n            // converting bitcoin price from Dollar to Toman\n            cryptoPrices[\"BitCoin\"][\"Buy\"] = cryptoPrices[\"BitCoin\"][\"Buy\"] * currencyPrices[\"US Dollar\"][\"Buy\"]\n\n            const allPrices = {...state,...currencyPrices,...goldPrices,...cryptoPrices}\n            \n            return allPrices\n        case ADD_SOURCE:\n            return {...state,...{[action.payload.newSourceName]:{\"Buy\":parseInt(action.payload.newSourceValue)}}}\n        default:\n            return state    \n    }\n}","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY} from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\tconst duplicateInventory = state.find(inventory => inventory.subSource === action.payload.subSource);\n\n\t\t\tif (duplicateInventory) {\n\t\t\t\treturn state.map(inventory => {\n\t\t\t\t\tif (inventory.subSource === duplicateInventory.subSource) {\n\t\t\t\t\t\treturn { ...inventory, amount: action.payload.amount };\n\t\t\t\t\t}\n\t\t\t\t\treturn inventory;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [...state, action.payload];\n\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n"],"sourceRoot":""}