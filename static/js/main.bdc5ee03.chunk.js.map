{"version":3,"sources":["api/api.js","actions/index.jsx","constants/actionTypes.jsx","components/forms/RenderError.jsx","components/forms/RenderInput.jsx","components/forms/AddSourceForm.jsx","components/modals/useModal.jsx","components/modals/Modal.jsx","components/forms/RenderSelector.jsx","NumberWithCommas.js","components/Calculator/index.jsx","components/forms/AddInventoryForm.jsx","history.jsx","components/AddInventory/index.jsx","components/NoInventoryWarning/index.jsx","components/table/TableHead.jsx","components/table/TableBody.jsx","components/AllInventoryValue.jsx","components/table/Table.jsx","components/charts/PieChart.jsx","components/charts/ChartFilter.jsx","components/charts/Charts.jsx","components/Inventory/index.jsx","components/App.jsx","reducers/inventoryReducer.jsx","reducers/index.jsx","reducers/inventoryLabels.jsx","reducers/pricesReducer.jsx","index.jsx","localStorage.js"],"names":["getPricesApi","a","axios","get","response","prices","data","item","getBitCoinPrice","bpi","getDayPrice","dispatch","dayPrices","bitCoinResponse","bitCoinPrice","parseInt","USD","rate_float","cryptoPrice","Crypto","Currency","Buy","allPrices","type","payload","RenderError","error","touched","className","RenderInput","input","label","meta","min","autoComplete","reduxForm","form","initialValues","newSourceValue","newSourceName","validate","formValues","errors","connect","addNewSource","getState","allTodayPrices","handleSubmit","onSubmit","message","toast","notify","duration","Field","name","component","useModal","useState","isShowing","setIsShowing","onEscKeyDown","e","key","useEffect","window","addEventListener","removeEventListener","toggle","Modal","hide","children","ReactDOM","createPortal","Fragment","onClick","aria-modal","aria-hidden","tabIndex","role","stopPropagation","data-dismiss","aria-label","document","body","RenderSelector","button","options","mainSource","id","icon","numberWithCommas","number","toString","replace","Calculator","totalPrice","subSource","amount","todayPrice","todayPrices","useSelector","state","selector","formValueSelector","inventoryLabels","labelTranslations","change","props","getSelectOptions","optionsList","map","option","index","value","mainSourceOptionsList","Object","keys","subSourceOptionsList","renderSelector","renderSubSourceLabel","to","process","createBrowserHistory","addToInventory","location","initialValue","successMessage","untouch","history","push","NoInventoryWarning","TableHead","scope","inventory","inventoryList","deleteFromInventory","tableBody","inventoryTodayValue","pathname","AllInventoryValue","allValue","reduce","total","Table","colSpan","PieChart","values","labels","datasets","backgroundColor","randomColor","count","borderWidth","maintainAspectRatio","legend","fontSize","ChartFilter","chartFormatToggle","onChange","target","htmlFor","chartFormat","setChartFormat","inventoryObj","forEach","asset","sourceName","assetValue","getValuesAndLabels","length","library","add","faTimes","faEdit","faPlus","App","exact","path","Inventory","AddInventory","AddSourceForm","InventoryReducer","action","duplicateInventory","find","newState","filter","combineReducers","formReducer","Gold","others","translations","Euro","BitCoin","newSource","currencyPrices","_","keyBy","goldPrices","cryptoPrices","inventoryReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","applyMiddleware","reduxThunk","subscribe","stringify","setItem","saveState","render","querySelector"],"mappings":"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","file":"static/js/main.bdc5ee03.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getPricesApi = async () => {\n\tconst url = 'https://currency.jafari.pw/json';\n\n\tconst response = await axios.get(url);\n\n\tlet prices = response.data;\n\n\tfor (let item of prices['Item']) {\n\t\titem['Buy'] = item['Rate'];\n\t\tdelete item['Rate'];\n\t}\n\n\treturn prices;\n};\n\nexport const getBitCoinPrice = async () => {\n\tconst url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n\n\tconst response = await axios.get(url);\n\n\treturn response.data.bpi;\n};\n","import * as types from '../constants/actionTypes';\nimport { getPricesApi, getBitCoinPrice } from '../api/api';\n\nexport const getDayPrice = () => async dispatch => {\n\tconst dayPrices = await getPricesApi();\n    const bitCoinResponse = await getBitCoinPrice();\n    const bitCoinPrice = parseInt(bitCoinResponse.USD.rate_float)\n\tconst cryptoPrice = { Crypto: [{ Currency: 'BitCoin', Buy: bitCoinPrice }]};\n    \n\tconst allPrices = { ...dayPrices, ...cryptoPrice };\n    \n\tdispatch({ type: types.GET_DAY_PRICE, payload: allPrices });\n};\n\nexport const addToInventory = formValues => async dispatch => {\n\tdispatch({ type: types.ADD_TO_INVENTORY, payload: formValues });\n};\n\nexport const deleteFromInventory = subSource => async dispatch => {\n\tdispatch({ type: types.DELETE_FROM_INVENTORY, payload: subSource });\n};\n\nexport const addNewSource = formValues => async (dispatch,getState) => {\n\tconst {allTodayPrices} = getState();\n\tif(formValues.newSourceName in allTodayPrices){\n\t\treturn 1\n\t}\n\tdispatch({type: types.ADD_SOURCE, payload: formValues});\n}","export const GET_DAY_PRICE = \"GET_DAY_PRICE\"\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\"\nexport const DELETE_FROM_INVENTORY = \"DELETE_FROM_INVENTORY\"\nexport const ADD_SOURCE = \"ADD_SOURCE\"","import React from 'react'\n\nconst RenderError = ({ error, touched }) => {\n    if (error && touched) {\n        return <div className=\"error-wraper\">{error}</div>;\n    }\n\n    return null\n}\n\nexport default RenderError","import React from 'react'\nimport RenderError from './RenderError'\n\nconst RenderInput = ({ input, label, meta, type=\"text\" }) => {\n    return (\n        <div className=\"col-wrapper\">\n            <div className=\"input-wrapper\">\n                <input min=\"0\" type={type} {...input} autoComplete=\"off\" />\n                <label>{label}</label>\n            </div>\n            <RenderError error={meta.error} touched={meta.touched} />\n        </div>\n    );\n};\n\nexport default RenderInput","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport RenderInput from './RenderInput';\nimport { connect } from 'react-redux';\nimport { addNewSource } from '../../actions';\nimport toast from 'toasted-notes';\n\nimport 'toasted-notes/src/styles.css';\n\nconst AddSourceForm = ({ handleSubmit,addNewSource }) => {\n\tconst onSubmit = async (formValues) => {\n\t\tconst response = await addNewSource(formValues);\n\t\tconst message = !response?\"نام دارایی جدید با موفقیت ثبت شد\":\"این دارایی قبلا ثبت شده است\";\n\t\ttoast.notify(() => (\n\t\t\t<div className={`toast ${!response?\"success\":\"warning\"}-toast`}>{message}</div>\n\t\t),{duration:1500})\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"addsource-form\">\n\t\t\t\t<Field name=\"newSourceName\" label=\"نام منبع جدید\" component={RenderInput} />\n\t\t\t\t<Field name=\"newSourceValue\" type=\"number\" label=\"ارزش\" component={RenderInput} />\n\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t<button className=\"button\">تایید</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.newSourceName) {\n\t\terrors['newSourceName'] = 'لطفا نام منبع را مشخص کنید';\n\t} else if (!formValues.newSourceValue) {\n\t\terrors['newSourceValue'] = 'لطفا ارزش منبع جدید را مشخص کنید';\n\t}\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'AddSourceForm',\n\tinitialValues:{newSourceValue:1,newSourceName:\"بورس\"},\n\tvalidate,\n})(connect(null, { addNewSource })(AddSourceForm));\n","import { useState, useEffect } from 'react';\n\nconst useModal = () => {\n\tconst [isShowing, setIsShowing] = useState(false);\n\n\tconst onEscKeyDown = (e) => {\n\t\tif (!isShowing || e.key !== 'Escape') return;\n\t\tsetIsShowing(false);\n\t};\n\n\tuseEffect(() => {\n    window.addEventListener('keydown', onEscKeyDown, false);\n    return () => {\n      window.removeEventListener('keydown',onEscKeyDown,false)\n    }\n\t});\n\n\tfunction toggle() {\n\t\tsetIsShowing(!isShowing);\n\t}\n\n\treturn {\n\t\tisShowing,\n\t\ttoggle,\n\t};\n};\n\nexport default useModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.scss'\n\nconst Modal = ({ isShowing, hide, children }) =>\n\tisShowing\n\t\t? ReactDOM.createPortal(\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"modal-overlay\" />\n\t\t\t\t\t<div className=\"modal-wrapper\" onClick={hide} aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n\t\t\t\t\t\t<div className=\"modal\" onClick={e => e.stopPropagation()}>\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"modal-close-button\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\tonClick={hide}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>,\n\t\t\t\tdocument.body\n\t\t  )\n\t\t: null;\n\n\n\nexport default Modal;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport AddSourceForm from './AddSourceForm';\nimport RenderError from './RenderError';\nimport useModal from '../modals/useModal';\nimport Modal from '../modals/Modal';\n\n\nconst RenderSelector = ({ input, label, meta, options,mainSource }) => {\n    const { isShowing, toggle } = useModal();\n    let button;\n    if (mainSource === 'others' && input.name === 'subSource') {\n        button = (\n            <button id=\"add-source-btn\" className=\"button\" onClick={toggle}>\n                <FontAwesomeIcon icon=\"plus\" />\n            </button>\n        );\n    }\n\n    if (isShowing) {\n        return (\n            <Modal isShowing={isShowing} hide={toggle}>\n                <AddSourceForm />\n            </Modal>\n        );\n    }\n\n    return (\n        <div className=\"col-wrapper\">\n            <div className=\"input-wrapper\">\n                {button}\n                <select type=\"select\" {...input}>\n                    {options}\n                </select>\n                <label>{label}</label>\n            </div>\n            <RenderError error={meta.error} touched={meta.touched} />\n        </div>\n    );\n};\n\nexport default RenderSelector;","const numberWithCommas = number => {\n    if(!number){\n        return 0\n    }\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport numberWithCommas from '../../NumberWithCommas';\n\nimport './style.scss'\n\nconst Calculator = ({ subSource, amount }) => {\n\tlet todayPrice = 0,\n\t\ttotalPrice = 0;\n\n\tconst todayPrices = useSelector(state => state.allTodayPrices);\n\tif (subSource) {\n\t\ttodayPrice = todayPrices[subSource]['Buy'];\n\t}\n\n\ttotalPrice = todayPrice * amount;\n\n\treturn (\n\t\t<div id=\"calculator\" className=\"form-section\">\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>قیمت روز</span>\n\t\t\t\t<span>{numberWithCommas(todayPrice)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<span>تعداد</span>\n\t\t\t\t<span>{numberWithCommas(amount)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<div className=\"price-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"unit-label\">تومان</div>\n\t\t\t\t\t<span>قیمت کل</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<span >{numberWithCommas(totalPrice)}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Calculator;\n","import React, { useEffect } from 'react';\nimport { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { getDayPrice } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport RenderInput from './RenderInput';\n\nimport renderSelector from './RenderSelector';\nimport Calculator from '../Calculator';\n\nimport './style.scss';\n\nconst AddInventoryForm = (props) => {\n\tuseEffect(() => {\n\t\tprops.getDayPrice();\n\t});\n\n\tconst getSelectOptions = (optionsList) => {\n\t\tlet options = optionsList.map((option, index) => (\n\t\t\t<option key={index} value={option}>\n\t\t\t\t{props.labelTranslations[option]}\n\t\t\t</option>\n\t\t));\n\t\treturn options;\n\t};\n\n\t// for rendering subSource label translation\n\tconst renderSubSourceLabel = (mainSource) => {\n\t\tif (mainSource === 'others' || !mainSource) {\n\t\t\treturn '';\n\t\t} else if (mainSource === 'Crypto') {\n\t\t\treturn 'ارز';\n\t\t} else {\n\t\t\treturn props.labelTranslations[mainSource];\n\t\t}\n\t};\n\n\tconst { handleSubmit, mainSource, subSource, amount } = props;\n\tconst mainSourceOptionsList = [...[''], ...Object.keys(props.inventoryLabels)];\n\tconst subSourceOptionsList = mainSource ? [...[''], ...props.inventoryLabels[mainSource]] : [''];\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(props.onSubmit)}>\n\t\t\t<div className=\"form-section\">\n\t\t\t\t<Field\n\t\t\t\t\tname=\"mainSource\"\n\t\t\t\t\tlabel=\"نوع منبع\"\n\t\t\t\t\tcomponent={renderSelector}\n\t\t\t\t\toptions={getSelectOptions(mainSourceOptionsList)}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"subSource\"\n\t\t\t\t\tlabel={`نوع ${renderSubSourceLabel(mainSource)}`}\n\t\t\t\t\tmainSource = {props.mainSource}\n\t\t\t\t\tcomponent={renderSelector}\n\t\t\t\t\toptions={getSelectOptions(subSourceOptionsList)}\n\t\t\t\t/>\n\t\t\t\t<Field name=\"amount\" label=\"مقدار\" type=\"number\" component={RenderInput} />\n\t\t\t</div>\n\t\t\t<Calculator subSource={subSource} amount={amount} />\n\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t<button className=\"button\" id=\"submit-btn\" type=\"submit\">\n\t\t\t\t\tتایید\n\t\t\t\t</button>\n\t\t\t\t<Link className=\"button\" to={`${process.env.PUBLIC_URL}`} id=\"return-btn\">\n\t\t\t\t\tبازگشت\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst selector = formValueSelector('addInventoryForm');\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventoryLabels: state.inventoryLabels,\n\t\tlabelTranslations: state.labelTranslations,\n\t\tmainSource: selector(state, 'mainSource'),\n\t\tsubSource: selector(state, 'subSource'),\n\t\tamount: selector(state, 'amount'),\n\t};\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.mainSource) {\n\t\terrors['mainSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!formValues.subSource) {\n\t\terrors['subSource'] = 'لطفا منبع را انتخاب کنید';\n\t} else if (!parseInt(formValues.amount)) {\n\t\terrors['amount'] = 'لطفا مقدار دارایی را مشخص کنید';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'addInventoryForm',\n\tvalidate,\n})(connect(mapStateToProps, { getDayPrice, change })(AddInventoryForm));\n","import {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory()","import React from 'react';\nimport { connect } from 'react-redux';\nimport { change, untouch } from 'redux-form';\nimport AddInventoryForm from '../forms/AddInventoryForm';\nimport { addToInventory } from '../../actions';\nimport history from '../../history';\nimport toast from 'toasted-notes';\n\nimport './style.scss';\nimport 'toasted-notes/src/styles.css';\n\nconst AddInventory = ({ addToInventory,location }) => {\n\tlet initialValues = location.initialValue ? location.initialValue: { amount: 0, mainSource: '', subSource: '' };\n\tlet successMessage = location.initialValue ? 'ویرایش با موفقیت انجام شد' : 'به دارایی اضافه شد'\n\n\tconst handleSubmit = (formValues, dispatch) => {\n\t\taddToInventory(formValues);\n\n\t\tdispatch(change('addInventoryForm', 'amount', ''));\n\t\tdispatch(untouch('addInventoryForm', 'amount', ''));\n\n\t\ttoast.notify(() => <div className=\"toast success-toast\">{successMessage}</div>, {\n\t\t\tduration: 2000,\n\t\t});\n\n\t\tif(location.initialValue){\n\t\t\thistory.push(`${process.env.PUBLIC_URL}/`)\n\t\t}\n\t};\n\n\n\treturn (\n\t\t<div className=\"form-page\">\n\t\t\t<AddInventoryForm onSubmit={handleSubmit} initialValues={initialValues} />\n\t\t</div>\n\t);\n};\n\nexport default connect(null, { addToInventory })(AddInventory);\n","import React from 'react';\n\nimport './style.scss'\n\nconst NoInventoryWarning = () => {\n\tconst message = '!هنوز چیزی به دارایی اضافه نکرده اید';\n\treturn (\n\t\t<div id=\"no-inventory-warning\">\n\t\t\t<p>{message}</p>\n\t\t</div>\n\t);\n};\n\nexport default NoInventoryWarning;\n","import React from 'react';\n\nconst TableHead = props => {\n\tconst tableHead = (\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">منبع</th>\n\t\t\t\t<th scope=\"col\">تعداد</th>\n\t\t\t\t<th scope=\"col\">قیمت روز</th>\n\t\t\t\t<th scope=\"col\">قیمت کل</th>\n\t\t\t\t<th scope=\"col\"></th>\n\t\t\t</tr>\n\t\t</thead>\n\t);\n\treturn tableHead;\n};\n\nexport default TableHead;\n","import React from 'react';\nimport { deleteFromInventory } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport numberWithCommas from '../../NumberWithCommas';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst TableBody = (props) => {\n\tconst tableBody = props.inventory.map((inventory, index) => {\n\t\tconst { labelTranslations, todayPrices, deleteFromInventory } = props;\n\t\tconst { subSource, amount, mainSource } = inventory;\n\t\tconst inventoryTodayValue = todayPrices[subSource]['Buy'];\n\t\t\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{labelTranslations[subSource]}</td>\n\t\t\t\t<td>{numberWithCommas(amount)}</td>\n\t\t\t\t<td>{numberWithCommas(inventoryTodayValue)}</td>\n\t\t\t\t<td>{numberWithCommas(parseInt(amount) * inventoryTodayValue)}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"button table-delete-btn\" onClick={() => deleteFromInventory(subSource)}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"times\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Link className=\"button success table-edit-btn\" to={{\n\t\t\t\t\t\tpathname: `${process.env.PUBLIC_URL}/editInventory`,\n\t\t\t\t\t\tinitialValue: {mainSource,subSource,amount},\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"edit\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t});\n\n\treturn <tbody>{tableBody}</tbody>;\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventory: state.inventoryList,\n\t\ttodayPrices: state.allTodayPrices,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, { deleteFromInventory })(TableBody);\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport numberWithCommas from '../NumberWithCommas';\n\nconst AllInventoryValue = () => {\n    const todayPrices = useSelector(state => state.allTodayPrices)\n    const inventoryList = useSelector(state => state.inventoryList)\n\n    let allValue = inventoryList.reduce((total,inventory) => {\n        return total + (todayPrices[inventory.subSource][\"Buy\"] * inventory.amount)\n    },0)\n    \n    return <span>{numberWithCommas(allValue)}</span>\n}\n\nexport default AllInventoryValue\n\n","import React from 'react'\nimport TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport AllInventoryValue from '../AllInventoryValue'\n\nimport './style.scss'\n\nconst Table = () => {\n    return(\n        <table>\n            <TableHead />\n            <TableBody />\n            <tbody>\n                <tr>\n                    <td id=\"all-value\" colSpan=\"2\">{AllInventoryValue()}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport randomColor from 'randomcolor'\n\n\nconst PieChart = ({values,labels}) => {\n\tconst colors = randomColor({count:6})\n\t\n\tconst options = {\n\t\tmaintainAspectRatio: false,\n\t\tlegend:{\n\t\t\tlabels:{\n\t\t\t\tfontSize:22\n\t\t\t}\n\t\t}\n\t}\n\n\tconst data = {\n        labels,\n        datasets: [{\n            label: '# of Votes',\n            data: values,\n            backgroundColor: colors,\n            borderWidth: 1\n        }]\n    }\n\treturn (\n\t\t<>\n\t\t\t<Doughnut data={data} options={options} />\n\t\t</>\n\t);\n};\n\n\nexport default PieChart","import React from 'react';\n\nconst ChartFilter  = ({chartFormatToggle}) => {\n    return (\n        <form>\n            <select name=\"chart-filter\" onChange={e => chartFormatToggle(e.target.value)}>\n                <option value=\"subSource\">منبع</option>\n                <option value=\"mainSource\">نوع منبع</option>\n            </select>\n            <label htmlFor=\"chart-filter\">  نمودار براساس</label>\n        </form>\n    )\n}\n\nexport default ChartFilter","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PieChart from './PieChart';\nimport ChartFilter from './ChartFilter';\nimport './style.scss';\n\nconst Charts = (props) => {\n\tconst [chartFormat, setChartFormat] = useState('subSource');\n\n\tconst getValuesAndLabels = () => {\n\t\tlet inventoryObj = {};\n\n\t\tprops.inventoryList.forEach((asset) => {\n\t\t\tlet sourceName = props.labelTranslations[asset[chartFormat]];\n\t\t\tlet assetValue = +props.allTodayPrices[asset.subSource].Buy * +asset.amount;\n\t\t\tif (sourceName in inventoryObj) {\n\t\t\t\tinventoryObj[sourceName] += assetValue;\n\t\t\t} else {\n\t\t\t\tinventoryObj[sourceName] = assetValue;\n\t\t\t}\n\t\t});\n\n\t\tconst labels = Object.keys(inventoryObj);\n\t\tconst values = Object.values(inventoryObj);\n\n\t\treturn [labels, values];\n\t};\n\n\tconst [labels, values] = getValuesAndLabels();\n\n\tif (!props.inventoryList.length) return null;\n\n\treturn (\n\t\t<div className=\"chart-page\">\n\t\t\t<ChartFilter chartFormatToggle={setChartFormat} />\n\t\t\t<div className=\"chart-container\">\n\t\t\t\t<PieChart\n\t\t\t\t\tallTodayPrices={props.allTodayPrices}\n\t\t\t\t\tvalues={values}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tlabelTranslations={props.labelTranslations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallTodayPrices: state.allTodayPrices,\n\t\tinventoryList: state.inventoryList,\n\t\tlabelTranslations: state.labelTranslations,\n\t};\n};\n\nexport default connect(mapStateToProps, {})(Charts);\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDayPrice } from '../../actions';\nimport { connect } from 'react-redux';\nimport NoInventoryWarning from '../NoInventoryWarning';\nimport Table from '../table/Table';\nimport Charts from '../charts/Charts';\n\nimport './style.scss';\n\nconst Inventory = ({getDayPrice,inventoryList}) => {\n\tuseEffect(() => {\n\t\tgetDayPrice();\n\t});\n\n\tconst renderContent = () => {\n\t\tif (!inventoryList.length) {\n\t\t\treturn <NoInventoryWarning />;\n\t\t} else {\n\t\t\treturn <Table />;\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"inventory-page\">\n\t\t\t\t{renderContent()}\n\t\t\t\t<Link className=\"button\" id=\"addInventoryLink\" to={process.env.PUBLIC_URL + '/addInventory'}>\n\t\t\t\t\tاضافه کردن دارایی\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<Charts />\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tinventoryList: state.inventoryList,\n\t};\n};\n\nexport default connect(mapStateToProps, { getDayPrice })(Inventory);\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport AddInventory from './AddInventory';\nimport Inventory from './Inventory';\nimport history from '../history';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport AddSourceForm from './forms/AddSourceForm';\n\nimport '../style.scss';\n\nlibrary.add(faTimes, faEdit, faPlus);\n\nconst App = () => {\n\treturn (\n\t\t<div id=\"app\">\n\t\t\t<Router history={history}>\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'} component={Inventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addInventory'} component={AddInventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/editInventory'} component={AddInventory} />\n\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/addSource'} component={AddSourceForm} />\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ADD_TO_INVENTORY, DELETE_FROM_INVENTORY} from '../constants/actionTypes';\n\nconst InventoryReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_INVENTORY:\n\t\t\tconst duplicateInventory = state.find(inventory => inventory.subSource === action.payload.subSource);\n\n\t\t\tif (duplicateInventory) {\n\t\t\t\treturn state.map(inventory => {\n\t\t\t\t\tif (inventory.subSource === duplicateInventory.subSource) {\n\t\t\t\t\t\treturn { ...inventory, amount: action.payload.amount };\n\t\t\t\t\t}\n\t\t\t\t\treturn inventory;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [...state, action.payload];\n\n\t\tcase DELETE_FROM_INVENTORY:\n\t\t\tconst newState = state.filter(inventory => inventory.subSource !== action.payload);\n\t\t\treturn newState\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default InventoryReducer","import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport {inventoryLabels,labelTranslations} from './inventoryLabels'\nimport allTodayPrices from './pricesReducer'\nimport inventoryReducer from './inventoryReducer'\n\nexport default combineReducers({\n    form: formReducer,\n    inventoryLabels,\n    labelTranslations,\n    allTodayPrices,\n    inventoryList:inventoryReducer\n})","import { ADD_SOURCE } from '../constants/actionTypes';\n\nexport const inventoryLabels = (state = {}, action) => {\n\tlet labels = {\n\t\tGold: ['Gold 18', '1 Emami', '1 Old Azadi', '1/2 Azadi', '1/4 Azadi'],\n\t\tCurrency: ['US Dollar', 'Euro', 'British Pound', 'Canadian Dollar'],\n\t\tCrypto: ['BitCoin'],\n\t\tothers: [],\n\t};\n\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\t\treturn { ...state, others: [...state.others, action.payload.newSourceName] };\n\t\tdefault:\n\t\t\tlet newState = { ...state, ...labels };\n\t\t\tnewState.others = state.others ? state.others : [];\n\t\t\treturn newState;\n\t}\n};\n\nexport const labelTranslations = (state = {}, action) => {\n\tconst translations = {\n\t\tGold: 'طلا',\n\t\t'Gold 18': 'طلا گرمی ۱۸ عیار',\n\t\t'1 Emami': 'تمام سکه',\n\t\t'1 Old Azadi': 'تمام سکه طرح قدیم',\n\t\t'1/2 Azadi': 'نیم سکه',\n\t\t'1/4 Azadi': 'ربع سکه',\n\t\tCurrency: 'ارز',\n\t\t'US Dollar': 'دلار آمریکا',\n\t\tEuro: 'یورو',\n\t\t'British Pound': 'پوند انگلیس',\n\t\t'Canadian Dollar': 'دلار کانادا',\n\t\tCrypto: 'ارز دیجیتال',\n\t\tBitCoin: 'بیت کوین',\n\t\tothers: 'دیگر منابع',\n\t};\n\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\t\tconst newSource = action.payload.newSourceName;\n\n\t\t\treturn { ...state, [newSource]: newSource };\n\t\tdefault:\n\t\t\treturn { ...state, ...translations };\n\t}\n};\n","import { GET_DAY_PRICE, ADD_SOURCE } from '../constants/actionTypes';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase GET_DAY_PRICE:\n\t\t\tconst currencyPrices = _.keyBy(action.payload['Currency'], 'Currency');\n\t\t\tconst goldPrices = {\n\t\t\t\t..._.keyBy(action.payload['Gold'], 'Coin'),\n\t\t\t\t..._.keyBy(action.payload['Item'], 'Name'),\n\t\t\t};\n\t\t\tlet cryptoPrices = _.keyBy(action.payload['Crypto'], 'Currency');\n\n\t\t\t// converting bitcoin price from Dollar to Toman\n\t\t\tcryptoPrices['BitCoin']['Buy'] = cryptoPrices['BitCoin']['Buy'] * currencyPrices['US Dollar']['Buy'];\n\n\t\t\tlet allPrices = { ...state, ...currencyPrices, ...goldPrices, ...cryptoPrices };\n\t\t\t\n\n\t\t\treturn allPrices;\n\t\tcase ADD_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...{ [action.payload.newSourceName]: { Buy: parseInt(action.payload.newSourceValue) } },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport {loadState,saveState} from './localStorage'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst persistedState = loadState();\nconst store = createStore(reducers,persistedState,composeEnhancers(applyMiddleware(reduxThunk)))\n\nstore.subscribe(() => {\n    saveState(store.getState())\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)\n","export const loadState = () => {\n    const serializedState = localStorage.getItem('state');\n    \n    try{\n        if(serializedState === null){\n            return undefined\n        }  \n    \n        return JSON.parse(serializedState);\n\n    }catch(err){\n        return undefined\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n\n        localStorage.setItem('state',serializedState)\n    } catch (err) {\n        \n    }\n}"],"sourceRoot":""}